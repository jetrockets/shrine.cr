crystal_doc_search_index_callback({"repository_name":"shrine","body":"![Shrine Logo](logo/shrine-cr-logo-small.png)\n\n# shrine.cr\n\n[![Build Status](https://github.com/jetrockets/shrine.cr/workflows/specs/badge.svg?branch=master)](https://github.com/jetrockets/shrine.cr/actions)\n[![GitHub release](https://img.shields.io/github/release/jetrockets/shrine.cr.svg)](https://GitHub.com/jetrockets/shrine.cr/releases/)\n[![GitHub license](https://img.shields.io/github/license/jetrockets/shrine.cr)](https://github.com/jetrockets/shrine.cr/blob/master/LICENSE)\n[![Join the chat at https://gitter.im/shrine-cr/community](https://badges.gitter.im/shrine-cr/community.svg)](https://gitter.im/shrine-cr/community?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nShrine is a toolkit for file attachments in Crystal applications. Heavily inspired by [Shrine for Ruby](https://shrinerb.com).\n\n## Documentation\n\n[https://jetrockets.github.io/shrine.cr](https://jetrockets.github.io/shrine.cr)\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     shrine:\n       github: jetrockets/shrine.cr\n   ```\n\n2. Run `shards install`\n\n## Usage\n\n```crystal\nrequire \"shrine\"\n```\n\nShrine.cr is under heavy development!\n\nFirst of all you should configure `Shrine`.\n\n``` crystal\nShrine.configure do |config|\n  config.storages[\"cache\"] = Storage::FileSystem.new(\"uploads\", prefix: \"cache\")\n  config.storages[\"store\"] = Storage::FileSystem.new(\"uploads\")\nend\n```\n\nNow you can use `Shrine` directly to upload your files.\n\n``` crystal\nShrine.upload(file, \"store\")\n```\n\n`Shrine.upload` method supports additional argument just like Shrine.rb. For example we want our file to have a custom filename.\n\n``` crystal\nShrine.upload(file, \"store\", metadata: { \"filename\" => \"foo.bar\" })\n```\n\n### Custom uploaders\n\nTo implement custom uploader class just inherit it from `Shrine`. You can override `Shrine` methods to implement custom logic. Here is an example how to create a custom file location.\n\n``` crystal\nclass FileImport::AssetUploader < Shrine\n  def generate_location(io : IO | UploadedFile, metadata, context, **options)\n    name = super(io, metadata, **options)\n\n    File.join(\"imports\", context[:model].id.to_s, name)\n  end\nend\n\nFileImport::AssetUploader.upload(file, \"store\", context: { model: YOUR_ORM_MODEL } })\n```\n\n### S3 storage\n\n#### Creating a Client\n\n``` crystal\nclient = Awscr::S3::Client.new(\"region\", \"key\", \"secret\")\n```\n\nFor S3 compatible services, like DigitalOcean Spaces or Minio, you'll need to set a custom endpoint:\n\n``` crystal\nclient = Awscr::S3::Client.new(\"nyc3\", \"key\", \"secret\", endpoint: \"https://nyc3.digitaloceanspaces.com\")\n```\n\n\n#### Create a S3 storage\n\nThe storage is initialized by providing your bucket and client:\n\n```crystal\nstorage = Shrine::Storage::S3.new(bucket: \"bucket_name\", client: client, prefix: \"prefix\")\n```\n\nSometimes you'll want to add additional upload options to all S3 uploads. You can do that by passing the :upload_options option:\n\n```crystal\nstorage = Shrine::Storage::S3.new(bucket: \"bucket_name\", client: client, upload_options: { \"x-amz-acl\"=> \"public-read\" })\n```\n\nYou can tell S3 storage to make uploads public:\n\n```crystal\nstorage = Shrine::Storage::S3.new(bucket: \"bucket_name\", client: client, public: true)\n```\n\n### ORM usage example\n\nCurrently ORM adapters are not implmented.\n\n#### Granite.\n\n``` crystal\nclass FileImport < Granite::Base\n  connection pg\n  table file_imports\n\n  column id : Int64, primary: true\n  column asset_data : Shrine::UploadedFile, converter: Granite::Converters::Json(Shrine::UploadedFile, JSON::Any)\n\n  after_save do\n    if @asset_changed && @asset_data\n      @asset_data = FileImport::AssetUploader.store(@asset_data.not_nil!, move: true, context: { model: self })\n      @asset_changed = false\n\n      save!\n    end\n  end\n\n  def asset=(upload : Amber::Router::File)\n    @asset_data = FileImport::AssetUploader.cache(upload.file, metadata: { filename: upload.filename })\n    @asset_changed = true\n  end\nend\n\n```\n\n#### Jennifer\n\n``` crystal\nclass FileImport < Jennifer::Model::Base\n  @asset_changed : Bool | Nil\n\n  with_timestamps\n\n  mapping(\n    id: Primary32,\n    asset_data: JSON::Any?,\n    created_at: Time?,\n    updated_at: Time?\n  )\n\n  after_save :move_to_store\n\n  def asset=(upload : Amber::Router::File)\n    self.asset_data = JSON.parse(FileImport::AssetUploader.cache(upload.file, metadata: { filename: upload.filename }).to_json)\n    asset_changed! if asset_data\n  end\n\n  def asset\n    Shrine::UploadedFile.from_json(asset_data.not_nil!.to_json) if asset_data\n  end\n\n  def asset_changed?\n    @asset_changed || false\n  end\n\n  private def asset_changed!\n    @asset_changed = true\n  end\n\n  private def move_to_store\n    if asset_changed?\n      self.asset_data = JSON.parse(FileImport::AssetUploader.store(asset.not_nil!, move: true, context: { model: self }).to_json)\n      @asset_changed = false\n      save!\n    end\n  end\nend\n\n```\n\n## Plugins\n\nShrine.cr has a plugins interface similar to Shrine.rb. You can extend functionality of uploaders inherited from `Shrine` and also extend `UploadedFile` class.\n\n### Determine MIME Type\n\nThe `DetermineMimeType` plugin is used to get mime type of uploaded file in several ways.\n\n``` crystal\n\nrequire \"shrine/plugins/determine_mime_type\"\n\nclass Uploader < Shrine\n  load_plugin(\n    Shrine::Plugins::DetermineMimeType,\n    analyzer: Shrine::Plugins::DetermineMimeType::Tools::File\n  )\n\n  finalize_plugins!\nend\n```\n**Analyzers**\n\n\nThe following analyzers are accepted:\n\n| Name | Description |\n| --- | --- |\n| `File`| (**Default**). Uses the file utility to determine the MIME type from file contents. It is installed by default on most operating systems. |\n| `Mime` | Uses the [MIME.from_filename](https://crystal-lang.org/api/0.31.1/MIME.html) method to determine the MIME type from file.|\n| `ContentType` | Retrieves the value of the `#content_type` attribute of the IO object. Note that this value normally comes from the \"Content-Type\" request header, so it's not guaranteed to hold the actual MIME type of the file. |\n\n\n### Add Metadata\n\nThe `AddMetadata` plugin provides a convenient method for extracting and adding custom metadata values.\n\n``` crystal\nrequire \"base64\"\nrequire \"shrine/plugins/add_metadata\"\n\nclass Uploader < Shrine\n  load_plugin(Shrine::Plugins::AddMetadata)\n\n  add_metadata :signature, -> {\n    Base64.encode(io.gets_to_end)\n  }\n\n  finalize_plugins!\nend\n```\n\nThe above will add `\"signature\"` to the metadata hash.\n\n``` crystal\nimage.metadata[\"signature\"]\n```\n\n**Multiple values**\n\nYou can also extract multiple metadata values at once.\n\n``` crystal\nclass Uploader < Shrine\n  load_plugin(Shrine::Plugins::AddMetadata)\n\n  add_metadata :multiple_values, -> {\n    text = io.gets_to_end\n\n    Shrine::UploadedFile::MetadataType{\n      \"custom_1\" => text,\n      \"custom_2\" => text * 2\n    }\n  }\n\n  finalize_plugins!\nend\n```\n\n``` crystal\nimage.metadata[\"custom_1\"]\nimage.metadata[\"custom_2\"]\n```\n\n### Store Dimensions\n\nThe `StoreDimensions` plugin extracts dimensions of uploaded images and stores them into the metadata. Additional dependency [https://github.com/jetrockets/fastimage.cr](https://github.com/jetrockets/fastimage.cr) needed for this plugin.\n\n``` crystal\n\nrequire \"fastimage\"\nrequire \"shrine/plugins/store_dimensions\"\n\nclass Uploader < Shrine\n  load_plugin(Shrine::Plugins::StoreDimensions,\n    analyzer: Shrine::Plugins::StoreDimensions::Tools::FastImage)\n\n  finalize_plugins!\nend\n```\n\n``` crystal\nimage.metadata[\"width\"]\nimage.metadata[\"height\"]\n```\n\n**Analyzers**\n\nThe following analyzers are accepted:\n\n\n| Name | Description |\n| --- | --- |\n| `FastImage` | (**Default**) Uses the [FastImage](https://github.com/jetrockets/fastimage.cr). |\n| `Identify` | A built-in solution that wrapps ImageMagick's `identify` command. |\n\n## Feature Progress\n\nIn no particular order, features that have been implemented and are planned.\nItems not marked as completed may have partial implementations.\n\n- [X] Shrine\n- [X] Shrine::UploadedFile\n    - [ ] ==\n    - [X] #original_filename\n    - [X] #extension\n    - [X] #size\n    - [X] #mime_type\n    - [X] #close\n    - [X] #url\n    - [X] #exists?\n    - [X] #open\n    - [X] #download\n    - [X] #stream\n    - [X] #replace\n    - [X] #delete\n- [X] Shrine::Attacher\n- [ ] Shrine::Attachment\n- [ ] Shrine::Storage\n    - [X] Shrine::Storage::Memory\n    - [X] Shrine::Storage::FileSystem\n    - [X] Shrine::Storage::S3\n- [ ] Uploaders\n    - [X] Custom uploaders\n    - [ ] Derivatives\n- [ ] ORM adapters\n    - [ ] `Granite` [https://github.com/amberframework/granite](https://github.com/amberframework/granite)\n    - [ ] `crecto` [https://github.com/Crecto/crecto](https://github.com/Crecto/crecto)\n    - [ ] `jennifer.cr` [https://github.com/imdrasil/jennifer.cr](https://github.com/imdrasil/jennifer.cr)\n    - [ ] `Avram` [https://github.com/luckyframework/avram](https://github.com/luckyframework/avram)\n- [X] Plugins\n- [ ] Background processing\n\n\n## Contributing\n\n1. Fork it (<https://github.com/your-github-user/shrine.cr/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Igor Alexandrov](https://github.com/igor-alexandrov) - creator and maintainer\n- [Arina Shmeleva](https://github.com/arina1004) - helped with S3 Storage\n- [Mick Wout](https://github.com/wout) - Plugins and Lucky integration\n","program":{"html_id":"shrine/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"locations":[],"repository_name":"shrine","program":true,"enum":false,"alias":false,"const":false,"types":[{"html_id":"shrine/Shrine","path":"Shrine.html","kind":"class","full_name":"Shrine","name":"Shrine","abstract":false,"superclass":{"html_id":"shrine/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"shrine/Shrine/InstanceMethods","kind":"module","full_name":"Shrine::InstanceMethods","name":"InstanceMethods"},{"html_id":"shrine/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"shrine/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"},{"html_id":"shrine/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"shrine/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/shrine.cr","line_number":11,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine.cr#L11"},{"filename":"src/shrine/attacher.cr","line_number":3,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/attacher.cr#L3"},{"filename":"src/shrine/plugins/add_metadata.cr","line_number":1,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/add_metadata.cr#L1"},{"filename":"src/shrine/plugins/column.cr","line_number":1,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/column.cr#L1"},{"filename":"src/shrine/plugins/determine_mime_type.cr","line_number":3,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/determine_mime_type.cr#L3"},{"filename":"src/shrine/plugins/store_dimensions.cr","line_number":3,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/store_dimensions.cr#L3"},{"filename":"src/shrine/storage/base.cr","line_number":3,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/base.cr#L3"},{"filename":"src/shrine/storage/file_system.cr","line_number":3,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/file_system.cr#L3"},{"filename":"src/shrine/storage/memory.cr","line_number":3,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/memory.cr#L3"},{"filename":"src/shrine/storage/s3.cr","line_number":6,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/s3.cr#L6"},{"filename":"src/shrine/uploaded_file.cr","line_number":3,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/uploaded_file.cr#L3"}],"repository_name":"shrine","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"HABITAT_SETTINGS","name":"HABITAT_SETTINGS","value":"[{decl: storages : Hash(String, Storage::Base) = Hash(String, Storage::Base).new, example: nil, validation: nil}] of Nil"},{"id":"Log","name":"Log","value":"::Log.for(\"shrine.cr\")"},{"id":"PLUGINS","name":"PLUGINS","value":"[] of Nil"}],"included_modules":[{"html_id":"shrine/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"shrine/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"},{"html_id":"shrine/Shrine/InstanceMethods","kind":"module","full_name":"Shrine::InstanceMethods","name":"InstanceMethods"}],"extended_modules":[{"html_id":"shrine/Shrine/ClassMethods","kind":"module","full_name":"Shrine::ClassMethods","name":"ClassMethods"}],"class_methods":[{"html_id":"configure(&)-class-method","name":"configure","abstract":false,"location":{"filename":"src/shrine.cr","line_number":31,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine.cr#L31"},"def":{"name":"configure","yields":1,"visibility":"Public","body":"yield settings"}},{"html_id":"plugin_settings-class-method","name":"plugin_settings","abstract":false,"location":{"filename":"src/shrine.cr","line_number":41,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine.cr#L41"},"def":{"name":"plugin_settings","visibility":"Public","body":"PluginSettings.new"}},{"html_id":"settings-class-method","name":"settings","abstract":false,"location":{"filename":"src/shrine.cr","line_number":31,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine.cr#L31"},"def":{"name":"settings","visibility":"Public","body":"HabitatSettings"}}],"instance_methods":[{"html_id":"settings-instance-method","name":"settings","abstract":false,"location":{"filename":"src/shrine.cr","line_number":31,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine.cr#L31"},"def":{"name":"settings","visibility":"Public","body":"HabitatSettings"}}],"macros":[{"html_id":"finalize_plugins!-macro","name":"finalize_plugins!","abstract":false,"location":{"filename":"src/shrine.cr","line_number":120,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine.cr#L120"},"def":{"name":"finalize_plugins!","visibility":"Public","body":"    class PluginsSettings\n      def all\n        \n{% if @type.constant(:PLUGINS) %}\n          {{ (@type.constant(:PLUGINS)).map do |plugin|\n  options = (plugin[:options].empty? ? nil : plugin[:options])\n  {name: (plugin[:decl].stringify.underscore.split(\"::\")).last, options: options}\nend }}\n        {% end %}\n\n      \nend\n\n      def [](key : Symbol | String)\n        all.find\n{ |plugin| plugin[:name] == key.to_s}.try &.[:options]\n      \nend\n\n      \n{% for plugin in @type.constant(:PLUGINS) %}\n        def {{ (plugin[:decl].stringify.underscore.split(\"::\")).last.id }}\n          {% if plugin[:options].empty? %}\n            nil\n          {% else %}\n            {{ plugin[:options] }}\n          {% end %}\n        end\n      {% end %}\n\n    \nend\n\n    def self.plugin_settings\n      PluginsSettings.new\n    \nend\n  \n"}},{"html_id":"load_plugin(plugin,**args)-macro","name":"load_plugin","abstract":false,"args":[{"name":"plugin","external_name":"plugin","restriction":""}],"args_string":"(plugin, **args)","args_html":"(plugin, **args)","location":{"filename":"src/shrine.cr","line_number":65,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine.cr#L65"},"def":{"name":"load_plugin","args":[{"name":"plugin","external_name":"plugin","restriction":""}],"double_splat":{"name":"args","external_name":"args","restriction":""},"visibility":"Public","body":"    \n{% plugin = plugin.resolve %}\n\n    \n{% options = args %}\n\n\n    \n{% if PLUGINS.map do |e|\n  e[:decl]\nend.includes?(plugin) %}\n      raise ArgumentError.new(\"Cannot load plugin {{ plugin.stringify }} to {{ @type }}. Plugin has already been initialized\")\n    {% else %}\n      {% if plugin.constant(:DEFAULT_OPTIONS) %}\n        {% if !options %}\n          {% options = plugin.constant(:DEFAULT_OPTIONS) %}\n        {% end %}\n\n        {% for key in (plugin.constant(:DEFAULT_OPTIONS)).keys %}\n          {% if options[key] %}{% else %}\n            {{ options[key] = (plugin.constant(:DEFAULT_OPTIONS))[key] }}\n          {% end %}\n        {% end %}\n      {% end %}\n\n      {% PLUGINS << {decl: plugin, options: options} %}\n    {% end %}\n\n\n    \n{% if plugin.constant(:InstanceMethods) %}\n      include {{ plugin.constant(:InstanceMethods) }}\n    {% end %}\n\n\n    \n{% if plugin.constant(:ClassMethods) %}\n      extend {{ plugin.constant(:ClassMethods) }}\n    {% end %}\n\n\n    \n{% if plugin.constant(:FileClassMethods) %}\n      class UploadedFile < Shrine::UploadedFile\n        extend {{ plugin.constant(:FileClassMethods) }}\n      end\n    {% end %}\n\n\n    \n{% if plugin.constant(:FileMethods) %}\n      class UploadedFile < Shrine::UploadedFile\n        include {{ plugin.constant(:FileMethods) }}\n      end\n    {% end %}\n\n\n    \n{% if plugin.constant(:AttacherClassMethods) %}\n      class Attacher < Shrine::Attacher\n        extend {{ plugin.constant(:AttacherClassMethods) }}\n      end\n    {% end %}\n\n\n    \n{% if plugin.constant(:AttacherMethods) %}\n      class Attacher < Shrine::Attacher\n        include {{ plugin.constant(:AttacherMethods) }}\n      end\n    {% end %}\n\n  \n"}}],"types":[{"html_id":"shrine/Shrine/Attacher","path":"Shrine/Attacher.html","kind":"class","full_name":"Shrine::Attacher","name":"Attacher","abstract":false,"superclass":{"html_id":"shrine/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"shrine/Shrine/Attacher/InstanceMethods","kind":"module","full_name":"Shrine::Attacher::InstanceMethods","name":"InstanceMethods"},{"html_id":"shrine/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"shrine/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/shrine/attacher.cr","line_number":6,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/attacher.cr#L6"}],"repository_name":"shrine","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"shrine/Shrine/Attacher/InstanceMethods","kind":"module","full_name":"Shrine::Attacher::InstanceMethods","name":"InstanceMethods"}],"extended_modules":[{"html_id":"shrine/Shrine/Attacher/ClassMethods","kind":"module","full_name":"Shrine::Attacher::ClassMethods","name":"ClassMethods"}],"namespace":{"html_id":"shrine/Shrine","kind":"class","full_name":"Shrine","name":"Shrine"},"doc":"Core class that handles attaching files. It uses Shrine and\nShrine::UploadedFile objects internally.","summary":"<p>Core class that handles attaching files.</p>","class_methods":[{"html_id":"shrine_class:Shrine.class-class-method","name":"shrine_class","doc":"Returns the Shrine class that this attacher class is namespaced\nunder.","summary":"<p>Returns the Shrine class that this attacher class is namespaced under.</p>","abstract":false,"location":{"filename":"src/shrine/attacher.cr","line_number":9,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/attacher.cr#L9"},"def":{"name":"shrine_class","return_type":"Shrine.class","visibility":"Public","body":"@@shrine_class"}}],"types":[{"html_id":"shrine/Shrine/Attacher/ClassMethods","path":"Shrine/Attacher/ClassMethods.html","kind":"module","full_name":"Shrine::Attacher::ClassMethods","name":"ClassMethods","abstract":false,"locations":[{"filename":"src/shrine/attacher.cr","line_number":11,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/attacher.cr#L11"}],"repository_name":"shrine","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"shrine/Shrine/Attacher","kind":"class","full_name":"Shrine::Attacher","name":"Attacher"},"instance_methods":[{"html_id":"from_data(data:Hash(String,String|UploadedFile::MetadataType)?,**options)-instance-method","name":"from_data","doc":"Initializes the attacher from a data hash generated from `Attacher#data`.\n\n    attacher = Attacher.from_data({ \"id\" => \"...\", \"storage\" => \"...\", \"metadata\" => { ... } })\n    attacher.file #=> #<Shrine::UploadedFile>","summary":"<p>Initializes the attacher from a data hash generated from <code>Attacher#data</code>.</p>","abstract":false,"args":[{"name":"data","external_name":"data","restriction":"Hash(String, String | UploadedFile::MetadataType) | ::Nil"}],"args_string":"(data : Hash(String, String | UploadedFile::MetadataType)?, **options)","args_html":"(data : Hash(String, String | <a href=\"../../Shrine/UploadedFile/MetadataType.html\">UploadedFile::MetadataType</a>)?, **options)","location":{"filename":"src/shrine/attacher.cr","line_number":16,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/attacher.cr#L16"},"def":{"name":"from_data","args":[{"name":"data","external_name":"data","restriction":"Hash(String, String | UploadedFile::MetadataType) | ::Nil"}],"double_splat":{"name":"options","external_name":"options","restriction":""},"visibility":"Public","body":"attacher = new(**options)\nattacher.load_data(data)\nattacher\n"}}]},{"html_id":"shrine/Shrine/Attacher/InstanceMethods","path":"Shrine/Attacher/InstanceMethods.html","kind":"module","full_name":"Shrine::Attacher::InstanceMethods","name":"InstanceMethods","abstract":false,"locations":[{"filename":"src/shrine/attacher.cr","line_number":23,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/attacher.cr#L23"}],"repository_name":"shrine","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"shrine/Shrine/Attacher","kind":"class","full_name":"Shrine::Attacher","name":"Attacher"}],"namespace":{"html_id":"shrine/Shrine/Attacher","kind":"class","full_name":"Shrine::Attacher","name":"Attacher"},"constructors":[{"html_id":"new(file:Shrine::UploadedFile?=nil,cache_key:String=\"cache\",store_key:String=\"store\")-class-method","name":"new","doc":"Initializes the attached file, temporary and permanent storage.","summary":"<p>Initializes the attached file, temporary and permanent storage.</p>","abstract":false,"args":[{"name":"file","default_value":"nil","external_name":"file","restriction":"Shrine::UploadedFile | ::Nil"},{"name":"cache_key","default_value":"\"cache\"","external_name":"cache_key","restriction":"String"},{"name":"store_key","default_value":"\"store\"","external_name":"store_key","restriction":"String"}],"args_string":"(file : Shrine::UploadedFile? = nil, cache_key : String = \"cache\", store_key : String = \"store\")","args_html":"(file : <a href=\"../../Shrine/UploadedFile.html\">Shrine::UploadedFile</a>? = <span class=\"n\">nil</span>, cache_key : String = <span class=\"s\">&quot;cache&quot;</span>, store_key : String = <span class=\"s\">&quot;store&quot;</span>)","location":{"filename":"src/shrine/attacher.cr","line_number":37,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/attacher.cr#L37"},"def":{"name":"new","args":[{"name":"file","default_value":"nil","external_name":"file","restriction":"Shrine::UploadedFile | ::Nil"},{"name":"cache_key","default_value":"\"cache\"","external_name":"cache_key","restriction":"String"},{"name":"store_key","default_value":"\"store\"","external_name":"store_key","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(file, cache_key, store_key)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"assign(value:IO?,**options)-instance-method","name":"assign","doc":"Calls #attach_cached, but skips if value is an empty string (this is\nuseful when the uploaded file comes from form fields). Forwards any\nadditional options to #attach_cached.\n\n    attacher.assign(File.open(...))\n    attacher.assign(File.open(...), metadata: { \"foo\" => \"bar\" })\n\n    # ignores the assignment when a blank string is given\n    attacher.assign(\"\")","summary":"<p>Calls #attach_cached, but skips if value is an empty string (this is useful when the uploaded file comes from form fields).</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"IO | ::Nil"}],"args_string":"(value : IO?, **options)","args_html":"(value : IO?, **options)","location":{"filename":"src/shrine/attacher.cr","line_number":53,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/attacher.cr#L53"},"def":{"name":"assign","args":[{"name":"value","external_name":"value","restriction":"IO | ::Nil"}],"double_splat":{"name":"options","external_name":"options","restriction":""},"visibility":"Public","body":"attach_cached(value, **options)"}},{"html_id":"attach(io:IO|Shrine::UploadedFile|Nil,storage=store_key,**options):UploadedFile?-instance-method","name":"attach","doc":"Uploads given IO object and changes the uploaded file.\n\n    # uploads the file to permanent storage\n    attacher.attach(io)\n\n    # uploads the file to specified storage\n    attacher.attach(io, storage: :other_store)\n\n    # forwards additional options to the uploader\n    attacher.attach(io, upload_options: { \"x-amz-acl\": \"public-read\" }, metadata: { \"foo\" => \"bar\" })\n\n    # removes the attachment\n    attacher.attach(nil)","summary":"<p>Uploads given IO object and changes the uploaded file.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO | Shrine::UploadedFile | Nil"},{"name":"storage","default_value":"store_key","external_name":"storage","restriction":""}],"args_string":"(io : IO | Shrine::UploadedFile | Nil, storage = store_key, **options) : UploadedFile?","args_html":"(io : IO | <a href=\"../../Shrine/UploadedFile.html\">Shrine::UploadedFile</a> | Nil, storage = store_key, **options) : <a href=\"../../Shrine/UploadedFile.html\">UploadedFile</a>?","location":{"filename":"src/shrine/attacher.cr","line_number":95,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/attacher.cr#L95"},"def":{"name":"attach","args":[{"name":"io","external_name":"io","restriction":"IO | Shrine::UploadedFile | Nil"},{"name":"storage","default_value":"store_key","external_name":"storage","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"return_type":"UploadedFile | Nil","visibility":"Public","body":"if io\n  file = upload(io, storage, **options)\nend\nchange(file)\n"}},{"html_id":"attach_cached(value:IO|UploadedFile|Nil,**options)-instance-method","name":"attach_cached","doc":"Sets an existing cached file, or uploads an IO object to temporary\nstorage and sets it via #attach. Forwards any additional options to\n#attach.\n\n    # upload file to temporary storage and set the uploaded file.\n    attacher.attach_cached(File.open(...))\n\n    # foward additional options to the uploader\n    attacher.attach_cached(File.open(...), metadata: { \"foo\" => \"bar\" })\n\n    # sets an existing cached file from JSON data\n    attacher.attach_cached(\"{\\\"id\\\":\\\"...\\\",\\\"storage\\\":\\\"cache\\\",\\\"metadata\\ \":{...}}\")\n\n    # sets an existing cached file from Hash data\n    attacher.attach_cached({ \"id\" => \"...\", \"storage\" => \"cache\", \"metadata\" => {} })","summary":"<p>Sets an existing cached file, or uploads an IO object to temporary storage and sets it via #attach.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"IO | UploadedFile | Nil"}],"args_string":"(value : IO | UploadedFile | Nil, **options)","args_html":"(value : IO | <a href=\"../../Shrine/UploadedFile.html\">UploadedFile</a> | Nil, **options)","location":{"filename":"src/shrine/attacher.cr","line_number":74,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/attacher.cr#L74"},"def":{"name":"attach_cached","args":[{"name":"value","external_name":"value","restriction":"IO | UploadedFile | Nil"}],"double_splat":{"name":"options","external_name":"options","restriction":""},"visibility":"Public","body":"attach(value, **options.merge(storage: cache_key, action: :cache))"}},{"html_id":"attach_cached(value:String|Hash(String,String|UploadedFile::MetadataType),**options)-instance-method","name":"attach_cached","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String | Hash(String, String | UploadedFile::MetadataType)"}],"args_string":"(value : String | Hash(String, String | UploadedFile::MetadataType), **options)","args_html":"(value : String | Hash(String, String | <a href=\"../../Shrine/UploadedFile/MetadataType.html\">UploadedFile::MetadataType</a>), **options)","location":{"filename":"src/shrine/attacher.cr","line_number":78,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/attacher.cr#L78"},"def":{"name":"attach_cached","args":[{"name":"value","external_name":"value","restriction":"String | Hash(String, String | UploadedFile::MetadataType)"}],"double_splat":{"name":"options","external_name":"options","restriction":""},"visibility":"Public","body":"change(cached(value, **options))"}},{"html_id":"attached?-instance-method","name":"attached?","doc":"Returns whether a file is attached.\n\n    attacher.attach(io)\n    attacher.attached? #=> true\n\n    attacher.attach(nil)\n    attacher.attached? #=> false","summary":"<p>Returns whether a file is attached.</p>","abstract":false,"location":{"filename":"src/shrine/attacher.cr","line_number":272,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/attacher.cr#L272"},"def":{"name":"attached?","visibility":"Public","body":"!(!file)"}},{"html_id":"cache_key-instance-method","name":"cache_key","abstract":false,"location":{"filename":"src/shrine/attacher.cr","line_number":31,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/attacher.cr#L31"},"def":{"name":"cache_key","visibility":"Public","body":"@cache_key"}},{"html_id":"cached?(file=self.file)-instance-method","name":"cached?","doc":"Returns whether the file is uploaded to temporary storage.\n\n    attacher.cached?       # checks current file\n    attacher.cached?(file) # checks given file","summary":"<p>Returns whether the file is uploaded to temporary storage.</p>","abstract":false,"args":[{"name":"file","default_value":"self.file","external_name":"file","restriction":""}],"args_string":"(file = self.file)","args_html":"(file = <span class=\"k\">self</span>.file)","location":{"filename":"src/shrine/attacher.cr","line_number":280,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/attacher.cr#L280"},"def":{"name":"cached?","args":[{"name":"file","default_value":"self.file","external_name":"file","restriction":""}],"visibility":"Public","body":"uploaded?(file, cache_key)"}},{"html_id":"change(file:Shrine::UploadedFile?):Shrine::UploadedFile?-instance-method","name":"change","doc":"Sets the uploaded file with dirty tracking, and runs validations.\n\n    attacher.change(uploaded_file)\n    attacher.file #=> #<Shrine::UploadedFile>\n    attacher.changed? #=> true","summary":"<p>Sets the uploaded file with dirty tracking, and runs validations.</p>","abstract":false,"args":[{"name":"file","external_name":"file","restriction":"Shrine::UploadedFile | ::Nil"}],"args_string":"(file : Shrine::UploadedFile?) : Shrine::UploadedFile?","args_html":"(file : <a href=\"../../Shrine/UploadedFile.html\">Shrine::UploadedFile</a>?) : <a href=\"../../Shrine/UploadedFile.html\">Shrine::UploadedFile</a>?","location":{"filename":"src/shrine/attacher.cr","line_number":216,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/attacher.cr#L216"},"def":{"name":"change","args":[{"name":"file","external_name":"file","restriction":"Shrine::UploadedFile | ::Nil"}],"return_type":"Shrine::UploadedFile | ::Nil","visibility":"Public","body":"if @file == file\nelse\n  @previous = dup\nend\nset(file)\n"}},{"html_id":"changed?-instance-method","name":"changed?","doc":"Returns whether the attachment has changed.\n\n    attacher.changed? #=> false\n    attacher.attach(file)\n    attacher.changed? #=> true\n\nTODO: This will work incorrect if `@previous` is nil","summary":"<p>Returns whether the attachment has changed.</p>","abstract":false,"location":{"filename":"src/shrine/attacher.cr","line_number":261,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/attacher.cr#L261"},"def":{"name":"changed?","visibility":"Public","body":"!(!@previous)"}},{"html_id":"context-instance-method","name":"context","doc":"Returns options that are automatically forwarded to the uploader.\nCan be modified with additional data.","summary":"<p>Returns options that are automatically forwarded to the uploader.</p>","abstract":false,"location":{"filename":"src/shrine/attacher.cr","line_number":29,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/attacher.cr#L29"},"def":{"name":"context","visibility":"Public","body":"@context"}},{"html_id":"data-instance-method","name":"data","doc":"Generates serializable data for the attachment.\n\n    attacher.data #=> { \"id\" => \"...\", \"storage\" => \"...\", \"metadata\": { ... } }","summary":"<p>Generates serializable data for the attachment.</p>","abstract":false,"location":{"filename":"src/shrine/attacher.cr","line_number":295,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/attacher.cr#L295"},"def":{"name":"data","visibility":"Public","body":"file.try(&.data)"}},{"html_id":"destroy-instance-method","name":"destroy","doc":"Destroys the attachment.\n\n    attacher.file.exists? #=> true\n    attacher.destroy\n    attacher.file.exists? #=> false","summary":"<p>Destroys the attachment.</p>","abstract":false,"location":{"filename":"src/shrine/attacher.cr","line_number":185,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/attacher.cr#L185"},"def":{"name":"destroy","visibility":"Public","body":"file.try(&.delete)"}},{"html_id":"destroy_attached-instance-method","name":"destroy_attached","doc":"Destroys the attached file if it exists and is uploaded to permanent\nstorage.\n\n    attacher.file.exists? #=> true\n    attacher.destroy_attached\n    attacher.file.exists? #=> false","summary":"<p>Destroys the attached file if it exists and is uploaded to permanent storage.</p>","abstract":false,"location":{"filename":"src/shrine/attacher.cr","line_number":176,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/attacher.cr#L176"},"def":{"name":"destroy_attached","visibility":"Public","body":"if destroy?\n  destroy\nend"}},{"html_id":"destroy_previous-instance-method","name":"destroy_previous","doc":"If a new file was attached, deletes previously attached file if any.\n\n    previous_file = attacher.file\n    attacher.attach(file)\n    attacher.destroy_previous\n    previous_file.exists? #=> false","summary":"<p>If a new file was attached, deletes previously attached file if any.</p>","abstract":false,"location":{"filename":"src/shrine/attacher.cr","line_number":166,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/attacher.cr#L166"},"def":{"name":"destroy_previous","visibility":"Public","body":"if changed?\n  @previous.not_nil!.destroy_attached\nend"}},{"html_id":"file:Shrine::UploadedFile?-instance-method","name":"file","doc":"Returns the attached uploaded file.","summary":"<p>Returns the attached uploaded file.</p>","abstract":false,"location":{"filename":"src/shrine/attacher.cr","line_number":25,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/attacher.cr#L25"},"def":{"name":"file","return_type":"Shrine::UploadedFile | ::Nil","visibility":"Public","body":"@file"}},{"html_id":"file!-instance-method","name":"file!","doc":"Returns attached file or raises an exception if no file is attached.","summary":"<p>Returns attached file or raises an exception if no file is attached.</p>","abstract":false,"location":{"filename":"src/shrine/attacher.cr","line_number":190,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/attacher.cr#L190"},"def":{"name":"file!","visibility":"Public","body":"file || (raise(Error.new(\"no file is attached\")))"}},{"html_id":"file=(file:Shrine::UploadedFile?)-instance-method","name":"file=","doc":"Returns the attached uploaded file.","summary":"<p>Returns the attached uploaded file.</p>","abstract":false,"args":[{"name":"file","external_name":"file","restriction":"Shrine::UploadedFile | ::Nil"}],"args_string":"(file : Shrine::UploadedFile?)","args_html":"(file : <a href=\"../../Shrine/UploadedFile.html\">Shrine::UploadedFile</a>?)","location":{"filename":"src/shrine/attacher.cr","line_number":25,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/attacher.cr#L25"},"def":{"name":"file=","args":[{"name":"file","external_name":"file","restriction":"Shrine::UploadedFile | ::Nil"}],"visibility":"Public","body":"@file = file"}},{"html_id":"finalize-instance-method","name":"finalize","doc":"Deletes any previous file and promotes newly attached cached file.\nIt also clears any dirty tracking.\n\n    # promoting cached file\n    attacher.assign(io)\n    attacher.cached? #=> true\n    attacher.finalize\n    attacher.stored?\n\n    # deleting previous file\n    previous_file = attacher.file\n    previous_file.exists? #=> true\n    attacher.assign(io)\n    attacher.finalize\n    previous_file.exists? #=> false\n\n    # clearing dirty tracking\n    attacher.assign(io)\n    attacher.changed? #=> true\n    attacher.finalize\n    attacher.changed? #=> false","summary":"<p>Deletes any previous file and promotes newly attached cached file.</p>","abstract":false,"location":{"filename":"src/shrine/attacher.cr","line_number":122,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/attacher.cr#L122"},"def":{"name":"finalize","visibility":"Public","body":"destroy_previous\npromote_cached\nif changed?\n  @previous = nil\nend\n"}},{"html_id":"get-instance-method","name":"get","doc":"Returns the attached file.\n\n    # when a file is attached\n    attacher.get #=> #<Shrine::UploadedFile>\n\n    # when no file is attached\n    attacher.get #=> nil","summary":"<p>Returns the attached file.</p>","abstract":false,"location":{"filename":"src/shrine/attacher.cr","line_number":238,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/attacher.cr#L238"},"def":{"name":"get","visibility":"Public","body":"file"}},{"html_id":"load_data(data:Hash(String,String|UploadedFile::MetadataType))-instance-method","name":"load_data","doc":"Loads the uploaded file from data generated by `Attacher#data`.\n\n    attacher.file #=> nil\n    attacher.load_data({ \"id\" => \"...\", \"storage\" => \"...\", \"metadata\" => { ... } })\n    attacher.file #=> #<Shrine::UploadedFile>","summary":"<p>Loads the uploaded file from data generated by <code>Attacher#data</code>.</p>","abstract":false,"args":[{"name":"data","external_name":"data","restriction":"Hash(String, String | UploadedFile::MetadataType)"}],"args_string":"(data : Hash(String, String | UploadedFile::MetadataType))","args_html":"(data : Hash(String, String | <a href=\"../../Shrine/UploadedFile/MetadataType.html\">UploadedFile::MetadataType</a>))","location":{"filename":"src/shrine/attacher.cr","line_number":199,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/attacher.cr#L199"},"def":{"name":"load_data","args":[{"name":"data","external_name":"data","restriction":"Hash(String, String | UploadedFile::MetadataType)"}],"visibility":"Public","body":"@file = uploaded_file(data)"}},{"html_id":"load_data(data:Nil)-instance-method","name":"load_data","abstract":false,"args":[{"name":"data","external_name":"data","restriction":"Nil"}],"args_string":"(data : Nil)","args_html":"(data : Nil)","location":{"filename":"src/shrine/attacher.cr","line_number":207,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/attacher.cr#L207"},"def":{"name":"load_data","args":[{"name":"data","external_name":"data","restriction":"Nil"}],"visibility":"Public","body":"@file = nil"}},{"html_id":"load_data(**data)-instance-method","name":"load_data","abstract":false,"location":{"filename":"src/shrine/attacher.cr","line_number":203,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/attacher.cr#L203"},"def":{"name":"load_data","double_splat":{"name":"data","external_name":"data","restriction":""},"visibility":"Public","body":"@file = uploaded_file(data.to_h.transform_keys(&.to_s))"}},{"html_id":"promote(storage=store_key,**options):Shrine::UploadedFile?-instance-method","name":"promote","doc":"Uploads current file to permanent storage and sets the stored file.\n\n    attacher.cached? #=> true\n    attacher.promote\n    attacher.stored? #=> true","summary":"<p>Uploads current file to permanent storage and sets the stored file.</p>","abstract":false,"args":[{"name":"storage","default_value":"store_key","external_name":"storage","restriction":""}],"args_string":"(storage = store_key, **options) : Shrine::UploadedFile?","args_html":"(storage = store_key, **options) : <a href=\"../../Shrine/UploadedFile.html\">Shrine::UploadedFile</a>?","location":{"filename":"src/shrine/attacher.cr","line_number":144,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/attacher.cr#L144"},"def":{"name":"promote","args":[{"name":"storage","default_value":"store_key","external_name":"storage","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"return_type":"Shrine::UploadedFile | Nil","visibility":"Public","body":"if file\n  set(upload(file.not_nil!, storage, **options.merge(action: :store)))\nend"}},{"html_id":"promote_cached(**options)-instance-method","name":"promote_cached","doc":"If a new cached file has been attached, uploads it to permanent storage.\nAny additional options are forwarded to #promote.\n\n    attacher.assign(io)\n    attacher.cached? #=> true\n    attacher.promote_cached\n    attacher.stored? #=> true","summary":"<p>If a new cached file has been attached, uploads it to permanent storage.</p>","abstract":false,"location":{"filename":"src/shrine/attacher.cr","line_number":135,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/attacher.cr#L135"},"def":{"name":"promote_cached","double_splat":{"name":"options","external_name":"options","restriction":""},"visibility":"Public","body":"if promote?\n  promote(**options)\nend"}},{"html_id":"set(file:Shrine::UploadedFile?):Shrine::UploadedFile?-instance-method","name":"set","doc":"Sets the uploaded file.\n\n    attacher.set(uploaded_file)\n    attacher.file #=> #<Shrine::UploadedFile>\n    attacher.changed? #=> false","summary":"<p>Sets the uploaded file.</p>","abstract":false,"args":[{"name":"file","external_name":"file","restriction":"Shrine::UploadedFile | ::Nil"}],"args_string":"(file : Shrine::UploadedFile?) : Shrine::UploadedFile?","args_html":"(file : <a href=\"../../Shrine/UploadedFile.html\">Shrine::UploadedFile</a>?) : <a href=\"../../Shrine/UploadedFile.html\">Shrine::UploadedFile</a>?","location":{"filename":"src/shrine/attacher.cr","line_number":227,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/attacher.cr#L227"},"def":{"name":"set","args":[{"name":"file","external_name":"file","restriction":"Shrine::UploadedFile | ::Nil"}],"return_type":"Shrine::UploadedFile | ::Nil","visibility":"Public","body":"@file = file"}},{"html_id":"shrine_class-instance-method","name":"shrine_class","doc":"Returns the Shrine class that this attacher's class is namespaced\nunder.","summary":"<p>Returns the Shrine class that this attacher's class is namespaced under.</p>","abstract":false,"location":{"filename":"src/shrine/attacher.cr","line_number":312,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/attacher.cr#L312"},"def":{"name":"shrine_class","visibility":"Public","body":"self.class.shrine_class"}},{"html_id":"store_key-instance-method","name":"store_key","abstract":false,"location":{"filename":"src/shrine/attacher.cr","line_number":32,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/attacher.cr#L32"},"def":{"name":"store_key","visibility":"Public","body":"@store_key"}},{"html_id":"stored?(file=self.file)-instance-method","name":"stored?","doc":"Returns whether the file is uploaded to permanent storage.\n\n    attacher.stored?       # checks current file\n    attacher.stored?(file) # checks given file","summary":"<p>Returns whether the file is uploaded to permanent storage.</p>","abstract":false,"args":[{"name":"file","default_value":"self.file","external_name":"file","restriction":""}],"args_string":"(file = self.file)","args_html":"(file = <span class=\"k\">self</span>.file)","location":{"filename":"src/shrine/attacher.cr","line_number":288,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/attacher.cr#L288"},"def":{"name":"stored?","args":[{"name":"file","default_value":"self.file","external_name":"file","restriction":""}],"visibility":"Public","body":"uploaded?(file, store_key)"}},{"html_id":"upload(io:IO|Shrine::UploadedFile,storage=store_key,**options):Shrine::UploadedFile-instance-method","name":"upload","doc":"Delegates to `Shrine.upload`, passing the #context.\n\n    # upload file to specified storage\n    attacher.upload(io, \"store\") #=> #<Shrine::UploadedFile>\n\n    # pass additional options for the uploader\n    attacher.upload(io, \"store\", metadata: { \"foo\" => \"bar\" })","summary":"<p>Delegates to <code>Shrine.upload</code>, passing the #context.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO | Shrine::UploadedFile"},{"name":"storage","default_value":"store_key","external_name":"storage","restriction":""}],"args_string":"(io : IO | Shrine::UploadedFile, storage = store_key, **options) : Shrine::UploadedFile","args_html":"(io : IO | <a href=\"../../Shrine/UploadedFile.html\">Shrine::UploadedFile</a>, storage = store_key, **options) : <a href=\"../../Shrine/UploadedFile.html\">Shrine::UploadedFile</a>","location":{"filename":"src/shrine/attacher.cr","line_number":155,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/attacher.cr#L155"},"def":{"name":"upload","args":[{"name":"io","external_name":"io","restriction":"IO | Shrine::UploadedFile"},{"name":"storage","default_value":"store_key","external_name":"storage","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"return_type":"Shrine::UploadedFile","visibility":"Public","body":"shrine_class.upload(io, storage, **options)"}},{"html_id":"uploaded_file(value)-instance-method","name":"uploaded_file","doc":"Converts JSON or Hash data into a Shrine::UploadedFile object.\n\n    attacher.uploaded_file(\"{\\\"id\\\":\\\"...\\\",\\\"storage\\\":\\\"...\\\",\\\"metadata\\\":{...}}\")\n    #=> #<Shrine::UploadedFile ...>\n\n    attacher.uploaded_file({ \"id\" => \"...\", \"storage\" => \"...\", \"metadata\" => {} })\n    #=> #<Shrine::UploadedFile ...>","summary":"<p>Converts JSON or Hash data into a Shrine::UploadedFile object.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":""}],"args_string":"(value)","args_html":"(value)","location":{"filename":"src/shrine/attacher.cr","line_number":306,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/attacher.cr#L306"},"def":{"name":"uploaded_file","args":[{"name":"value","external_name":"value","restriction":""}],"visibility":"Public","body":"shrine_class.uploaded_file(value)"}},{"html_id":"url(**options)-instance-method","name":"url","doc":"If a file is attached, returns the uploaded file URL, otherwise returns\nnil. Any options are forwarded to the storage.\n\n    attacher.file = file\n    attacher.url #=> \"https://...\"\n\n    attacher.file = nil\n    attacher.url #=> nil","summary":"<p>If a file is attached, returns the uploaded file URL, otherwise returns nil.</p>","abstract":false,"location":{"filename":"src/shrine/attacher.cr","line_number":250,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/attacher.cr#L250"},"def":{"name":"url","double_splat":{"name":"options","external_name":"options","restriction":""},"visibility":"Public","body":"file.try(&.url(**options))"}}]}]},{"html_id":"shrine/Shrine/ClassMethods","path":"Shrine/ClassMethods.html","kind":"module","full_name":"Shrine::ClassMethods","name":"ClassMethods","abstract":false,"locations":[{"filename":"src/shrine.cr","line_number":157,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine.cr#L157"}],"repository_name":"shrine","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"shrine/Shrine","kind":"class","full_name":"Shrine","name":"Shrine"},"instance_methods":[{"html_id":"cache(io,**options)-instance-method","name":"cache","abstract":false,"args":[{"name":"io","external_name":"io","restriction":""}],"args_string":"(io, **options)","args_html":"(io, **options)","location":{"filename":"src/shrine.cr","line_number":176,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine.cr#L176"},"def":{"name":"cache","args":[{"name":"io","external_name":"io","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"visibility":"Public","body":"(new(\"cache\")).upload(io, **options)"}},{"html_id":"find_storage(name:String)-instance-method","name":"find_storage","doc":"Retrieves the storage under the given identifier (Symbol), raising Shrine::Error if the storage is missing.","summary":"<p>Retrieves the storage under the given identifier (Symbol), raising Shrine::Error if the storage is missing.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : String)","location":{"filename":"src/shrine.cr","line_number":163,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine.cr#L163"},"def":{"name":"find_storage","args":[{"name":"name","external_name":"name","restriction":"String"}],"visibility":"Public","body":"settings.storages[name]? || (raise(Error.new(\"storage #{name.inspect} isn't registered on #{self}\")))"}},{"html_id":"raise_if_missing_settings!-instance-method","name":"raise_if_missing_settings!","abstract":false,"location":{"filename":"src/shrine.cr","line_number":184,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine.cr#L184"},"def":{"name":"raise_if_missing_settings!","visibility":"Public","body":"Habitat.raise_if_missing_settings!"}},{"html_id":"store(io,**options)-instance-method","name":"store","abstract":false,"args":[{"name":"io","external_name":"io","restriction":""}],"args_string":"(io, **options)","args_html":"(io, **options)","location":{"filename":"src/shrine.cr","line_number":180,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine.cr#L180"},"def":{"name":"store","args":[{"name":"io","external_name":"io","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"visibility":"Public","body":"(new(\"store\")).upload(io, **options)"}},{"html_id":"upload(io,storage,**options)-instance-method","name":"upload","doc":"Uploads the file to the specified storage. It delegates to `Shrine#upload`.\n\n```\nShrine.upload(io, :store) # => #<Shrine::UploadedFile>\n```","summary":"<p>Uploads the file to the specified storage.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":""},{"name":"storage","external_name":"storage","restriction":""}],"args_string":"(io, storage, **options)","args_html":"(io, storage, **options)","location":{"filename":"src/shrine.cr","line_number":172,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine.cr#L172"},"def":{"name":"upload","args":[{"name":"io","external_name":"io","restriction":""},{"name":"storage","external_name":"storage","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"visibility":"Public","body":"(new(storage)).upload(io, **options)"}},{"html_id":"uploaded_file(hash:Hash(String,String|UploadedFile::MetadataType))-instance-method","name":"uploaded_file","abstract":false,"args":[{"name":"hash","external_name":"hash","restriction":"Hash(String, String | UploadedFile::MetadataType)"}],"args_string":"(hash : Hash(String, String | UploadedFile::MetadataType))","args_html":"(hash : Hash(String, String | <a href=\"../Shrine/UploadedFile/MetadataType.html\">UploadedFile::MetadataType</a>))","location":{"filename":"src/shrine.cr","line_number":188,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine.cr#L188"},"def":{"name":"uploaded_file","args":[{"name":"hash","external_name":"hash","restriction":"Hash(String, String | UploadedFile::MetadataType)"}],"visibility":"Public","body":"self.uploaded_file(hash.to_json)"}},{"html_id":"uploaded_file(json:String)-instance-method","name":"uploaded_file","abstract":false,"args":[{"name":"json","external_name":"json","restriction":"String"}],"args_string":"(json : String)","args_html":"(json : String)","location":{"filename":"src/shrine.cr","line_number":192,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine.cr#L192"},"def":{"name":"uploaded_file","args":[{"name":"json","external_name":"json","restriction":"String"}],"visibility":"Public","body":"UploadedFile.from_json(json)"}},{"html_id":"uploaded_file(object:UploadedFile)-instance-method","name":"uploaded_file","abstract":false,"args":[{"name":"object","external_name":"object","restriction":"UploadedFile"}],"args_string":"(object : UploadedFile)","args_html":"(object : <a href=\"../Shrine/UploadedFile.html\">UploadedFile</a>)","location":{"filename":"src/shrine.cr","line_number":196,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine.cr#L196"},"def":{"name":"uploaded_file","args":[{"name":"object","external_name":"object","restriction":"UploadedFile"}],"visibility":"Public","body":"object"}},{"html_id":"warn(message)-instance-method","name":"warn","doc":"Prints a warning to the logger.","summary":"<p>Prints a warning to the logger.</p>","abstract":false,"args":[{"name":"message","external_name":"message","restriction":""}],"args_string":"(message)","args_html":"(message)","location":{"filename":"src/shrine.cr","line_number":228,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine.cr#L228"},"def":{"name":"warn","args":[{"name":"message","external_name":"message","restriction":""}],"visibility":"Public","body":"Log.warn do\n  \"SHRINE WARNING: #{message}\"\nend"}},{"html_id":"with_file(io:IO,&)-instance-method","name":"with_file","doc":"Temporarily converts an IO-like object into a file. If the input IO object\nis already a file, it simply yields it to the block, otherwise it copies\nIO content into a Tempfile object which is then yielded and afterwards\ndeleted.\n\n```\nShrine.with_file(io) { |file| file.path }\n```\n","summary":"<p>Temporarily converts an IO-like object into a file.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO, &)","args_html":"(io : IO, &)","location":{"filename":"src/shrine.cr","line_number":209,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine.cr#L209"},"def":{"name":"with_file","args":[{"name":"io","external_name":"io","restriction":"IO"}],"yields":1,"visibility":"Public","body":"if io.responds_to?(:path)\n  yield io\nelse\n  File.tempfile(\"shrine-file\") do |file|\n    File.write(file.path, io.gets_to_end)\n    io.rewind\n    yield file\n  end\nend"}},{"html_id":"with_file(uploaded_file:UploadedFile,&)-instance-method","name":"with_file","abstract":false,"args":[{"name":"uploaded_file","external_name":"uploaded_file","restriction":"UploadedFile"}],"args_string":"(uploaded_file : UploadedFile, &)","args_html":"(uploaded_file : <a href=\"../Shrine/UploadedFile.html\">UploadedFile</a>, &)","location":{"filename":"src/shrine.cr","line_number":221,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine.cr#L221"},"def":{"name":"with_file","args":[{"name":"uploaded_file","external_name":"uploaded_file","restriction":"UploadedFile"}],"yields":1,"visibility":"Public","body":"uploaded_file.download do |tempfile|\n  yield tempfile\nend"}}]},{"html_id":"shrine/Shrine/Error","path":"Shrine/Error.html","kind":"class","full_name":"Shrine::Error","name":"Error","abstract":false,"superclass":{"html_id":"shrine/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"shrine/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"shrine/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"shrine/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/shrine.cr","line_number":14,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine.cr#L14"}],"repository_name":"shrine","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"shrine/Shrine/FileNotFound","kind":"class","full_name":"Shrine::FileNotFound","name":"FileNotFound"},{"html_id":"shrine/Shrine/InvalidFile","kind":"class","full_name":"Shrine::InvalidFile","name":"InvalidFile"},{"html_id":"shrine/Shrine/NotCached","kind":"class","full_name":"Shrine::NotCached","name":"NotCached"}],"namespace":{"html_id":"shrine/Shrine","kind":"class","full_name":"Shrine","name":"Shrine"}},{"html_id":"shrine/Shrine/FileNotFound","path":"Shrine/FileNotFound.html","kind":"class","full_name":"Shrine::FileNotFound","name":"FileNotFound","abstract":false,"superclass":{"html_id":"shrine/Shrine/Error","kind":"class","full_name":"Shrine::Error","name":"Error"},"ancestors":[{"html_id":"shrine/Shrine/Error","kind":"class","full_name":"Shrine::Error","name":"Error"},{"html_id":"shrine/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"shrine/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"shrine/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/shrine.cr","line_number":24,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine.cr#L24"}],"repository_name":"shrine","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"shrine/Shrine","kind":"class","full_name":"Shrine","name":"Shrine"},"doc":"Raised by the storage in the #open method.","summary":"<p>Raised by the storage in the #open method.</p>"},{"html_id":"shrine/Shrine/HabitatSettings","path":"Shrine/HabitatSettings.html","kind":"class","full_name":"Shrine::HabitatSettings","name":"HabitatSettings","abstract":false,"superclass":{"html_id":"shrine/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"shrine/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"shrine/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/shrine.cr","line_number":31,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine.cr#L31"}],"repository_name":"shrine","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"shrine/Shrine","kind":"class","full_name":"Shrine","name":"Shrine"},"class_methods":[{"html_id":"storages:Hash(String,Storage::Base)-class-method","name":"storages","abstract":false,"def":{"name":"storages","return_type":"Hash(String, Storage::Base)","visibility":"Public","body":"@@storages.not_nil!"}},{"html_id":"storages=(value:Hash(String,Storage::Base))-class-method","name":"storages=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Hash(String, Storage::Base)"}],"args_string":"(value : Hash(String, Storage::Base))","args_html":"(value : Hash(String, <a href=\"../Shrine/Storage/Base.html\">Storage::Base</a>))","def":{"name":"storages=","args":[{"name":"value","external_name":"value","restriction":"Hash(String, Storage::Base)"}],"visibility":"Public","body":"@@storages = value"}},{"html_id":"storages?-class-method","name":"storages?","doc":"Used for checking missing settings on non-nilable types\nIt's advised to use storages in your apps to ensure\nthe propper type is checked.","summary":"<p>Used for checking missing settings on non-nilable types It's advised to use storages in your apps to ensure the propper type is checked.</p>","abstract":false,"def":{"name":"storages?","visibility":"Public","body":"@@storages"}},{"html_id":"to_h-class-method","name":"to_h","doc":"Generates a hash using the provided values","summary":"<p>Generates a hash using the provided values</p>","abstract":false,"def":{"name":"to_h","visibility":"Public","body":"{\"storages\" => storages}"}}]},{"html_id":"shrine/Shrine/InstanceMethods","path":"Shrine/InstanceMethods.html","kind":"module","full_name":"Shrine::InstanceMethods","name":"InstanceMethods","abstract":false,"locations":[{"filename":"src/shrine.cr","line_number":233,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine.cr#L233"}],"repository_name":"shrine","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"shrine/Shrine","kind":"class","full_name":"Shrine","name":"Shrine"}],"namespace":{"html_id":"shrine/Shrine","kind":"class","full_name":"Shrine","name":"Shrine"},"constructors":[{"html_id":"new(storage_key:String)-class-method","name":"new","abstract":false,"args":[{"name":"storage_key","external_name":"storage_key","restriction":"String"}],"args_string":"(storage_key : String)","args_html":"(storage_key : String)","location":{"filename":"src/shrine.cr","line_number":236,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine.cr#L236"},"def":{"name":"new","args":[{"name":"storage_key","external_name":"storage_key","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(storage_key)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"generate_location(io:IO|UploadedFile,metadata,**options)-instance-method","name":"generate_location","doc":"Generates a unique location for the uploaded file, preserving the\nfile extension. Can be overriden in uploaders for generating custom\nlocation.","summary":"<p>Generates a unique location for the uploaded file, preserving the file extension.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO | UploadedFile"},{"name":"metadata","external_name":"metadata","restriction":""}],"args_string":"(io : IO | UploadedFile, metadata, **options)","args_html":"(io : IO | <a href=\"../Shrine/UploadedFile.html\">UploadedFile</a>, metadata, **options)","location":{"filename":"src/shrine.cr","line_number":269,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine.cr#L269"},"def":{"name":"generate_location","args":[{"name":"io","external_name":"io","restriction":"IO | UploadedFile"},{"name":"metadata","external_name":"metadata","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"visibility":"Public","body":"basic_location(io, metadata: metadata)"}},{"html_id":"generate_uid(io)-instance-method","name":"generate_uid","doc":"Generates a unique identifier that can be used for a location.","summary":"<p>Generates a unique identifier that can be used for a location.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":""}],"args_string":"(io)","args_html":"(io)","location":{"filename":"src/shrine.cr","line_number":355,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine.cr#L355"},"def":{"name":"generate_uid","args":[{"name":"io","external_name":"io","restriction":""}],"visibility":"Public","body":"Random.new.hex"}},{"html_id":"storage-instance-method","name":"storage","doc":"Returns the storage object referenced by the identifier.","summary":"<p>Returns the storage object referenced by the identifier.</p>","abstract":false,"location":{"filename":"src/shrine.cr","line_number":240,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine.cr#L240"},"def":{"name":"storage","visibility":"Public","body":"self.class.find_storage(storage_key)"}},{"html_id":"storage_key:String-instance-method","name":"storage_key","abstract":false,"location":{"filename":"src/shrine.cr","line_number":234,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine.cr#L234"},"def":{"name":"storage_key","return_type":"String","visibility":"Public","body":"@storage_key"}},{"html_id":"upload(io:IO|UploadedFile,**options)-instance-method","name":"upload","doc":"The main method for uploading files. Takes an IO-like object and an\noptional context hash (used internally by Shrine::Attacher). It calls\nuser-defined #process, and afterwards it calls #store. The `io` is\nclosed after upload.\n\n  uploader.upload(io)\n  uploader.upload(io, metadata: { \"foo\" => \"bar\" })           # add metadata\n  uploader.upload(io, location: \"path/to/file\")               # specify location\n  uploader.upload(io, upload_options: { acl: \"public-read\" }) # add upload options","summary":"<p>The main method for uploading files.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO | UploadedFile"}],"args_string":"(io : IO | UploadedFile, **options)","args_html":"(io : IO | <a href=\"../Shrine/UploadedFile.html\">UploadedFile</a>, **options)","location":{"filename":"src/shrine.cr","line_number":253,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine.cr#L253"},"def":{"name":"upload","args":[{"name":"io","external_name":"io","restriction":"IO | UploadedFile"}],"double_splat":{"name":"options","external_name":"options","restriction":""},"visibility":"Public","body":"metadata = get_metadata(io, **options)\nlocation = get_location(io, **options.merge(metadata: metadata))\n_upload(io, **options.merge(location: location, metadata: metadata))\nUploadedFile.new(id: location, storage_key: storage_key, metadata: metadata)\n"}},{"html_id":"warn(message)-instance-method","name":"warn","doc":"Prints a warning to the logger.","summary":"<p>Prints a warning to the logger.</p>","abstract":false,"args":[{"name":"message","external_name":"message","restriction":""}],"args_string":"(message)","args_html":"(message)","location":{"filename":"src/shrine.cr","line_number":274,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine.cr#L274"},"def":{"name":"warn","args":[{"name":"message","external_name":"message","restriction":""}],"visibility":"Public","body":"Log.warn do\n  \"SHRINE WARNING: #{message}\"\nend"}}]},{"html_id":"shrine/Shrine/InvalidFile","path":"Shrine/InvalidFile.html","kind":"class","full_name":"Shrine::InvalidFile","name":"InvalidFile","abstract":false,"superclass":{"html_id":"shrine/Shrine/Error","kind":"class","full_name":"Shrine::Error","name":"Error"},"ancestors":[{"html_id":"shrine/Shrine/Error","kind":"class","full_name":"Shrine::Error","name":"Error"},{"html_id":"shrine/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"shrine/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"shrine/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/shrine.cr","line_number":17,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine.cr#L17"}],"repository_name":"shrine","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"shrine/Shrine","kind":"class","full_name":"Shrine","name":"Shrine"},"doc":"Raised when a file is not a valid IO.","summary":"<p>Raised when a file is not a valid IO.</p>","constructors":[{"html_id":"new(io,missing_methods)-class-method","name":"new","abstract":false,"args":[{"name":"io","external_name":"io","restriction":""},{"name":"missing_methods","external_name":"missing_methods","restriction":""}],"args_string":"(io, missing_methods)","args_html":"(io, missing_methods)","location":{"filename":"src/shrine.cr","line_number":18,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine.cr#L18"},"def":{"name":"new","args":[{"name":"io","external_name":"io","restriction":""},{"name":"missing_methods","external_name":"missing_methods","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(io, missing_methods)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}]},{"html_id":"shrine/Shrine/NotCached","path":"Shrine/NotCached.html","kind":"class","full_name":"Shrine::NotCached","name":"NotCached","abstract":false,"superclass":{"html_id":"shrine/Shrine/Error","kind":"class","full_name":"Shrine::Error","name":"Error"},"ancestors":[{"html_id":"shrine/Shrine/Error","kind":"class","full_name":"Shrine::Error","name":"Error"},{"html_id":"shrine/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"shrine/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"shrine/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/shrine.cr","line_number":28,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine.cr#L28"}],"repository_name":"shrine","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"shrine/Shrine","kind":"class","full_name":"Shrine","name":"Shrine"},"doc":"Raised by the attacher when assigned uploaded file is not cached.","summary":"<p>Raised by the attacher when assigned uploaded file is not cached.</p>"},{"html_id":"shrine/Shrine/Plugins","path":"Shrine/Plugins.html","kind":"module","full_name":"Shrine::Plugins","name":"Plugins","abstract":false,"locations":[{"filename":"src/shrine/plugins/add_metadata.cr","line_number":2,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/add_metadata.cr#L2"},{"filename":"src/shrine/plugins/column.cr","line_number":2,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/column.cr#L2"},{"filename":"src/shrine/plugins/determine_mime_type.cr","line_number":4,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/determine_mime_type.cr#L4"},{"filename":"src/shrine/plugins/store_dimensions.cr","line_number":4,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/store_dimensions.cr#L4"}],"repository_name":"shrine","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"shrine/Shrine","kind":"class","full_name":"Shrine","name":"Shrine"},"types":[{"html_id":"shrine/Shrine/Plugins/AddMetadata","path":"Shrine/Plugins/AddMetadata.html","kind":"module","full_name":"Shrine::Plugins::AddMetadata","name":"AddMetadata","abstract":false,"locations":[{"filename":"src/shrine/plugins/add_metadata.cr","line_number":3,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/add_metadata.cr#L3"}],"repository_name":"shrine","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"shrine/Shrine/Plugins","kind":"module","full_name":"Shrine::Plugins","name":"Plugins"},"types":[{"html_id":"shrine/Shrine/Plugins/AddMetadata/InstanceMethods","path":"Shrine/Plugins/AddMetadata/InstanceMethods.html","kind":"module","full_name":"Shrine::Plugins::AddMetadata::InstanceMethods","name":"InstanceMethods","abstract":false,"locations":[{"filename":"src/shrine/plugins/add_metadata.cr","line_number":4,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/add_metadata.cr#L4"}],"repository_name":"shrine","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"CUSTOM_METATADATA_FIELDS","name":"CUSTOM_METATADATA_FIELDS","value":"{} of Nil => Nil"}],"namespace":{"html_id":"shrine/Shrine/Plugins/AddMetadata","kind":"module","full_name":"Shrine::Plugins::AddMetadata","name":"AddMetadata"},"macros":[{"html_id":"add_metadata(name,decl)-macro","name":"add_metadata","abstract":false,"args":[{"name":"name","external_name":"name","restriction":""},{"name":"decl","external_name":"decl","restriction":""}],"args_string":"(name, decl)","args_html":"(name, decl)","location":{"filename":"src/shrine/plugins/add_metadata.cr","line_number":33,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/add_metadata.cr#L33"},"def":{"name":"add_metadata","args":[{"name":"name","external_name":"name","restriction":""},{"name":"decl","external_name":"decl","restriction":""}],"visibility":"Public","body":"          \n{% name = name.id\nCUSTOM_METATADATA_FIELDS[name] = decl\n %}\n\n        \n"}}]}]},{"html_id":"shrine/Shrine/Plugins/Column","path":"Shrine/Plugins/Column.html","kind":"module","full_name":"Shrine::Plugins::Column","name":"Column","abstract":false,"locations":[{"filename":"src/shrine/plugins/column.cr","line_number":3,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/column.cr#L3"}],"repository_name":"shrine","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"DEFAULT_OPTIONS","name":"DEFAULT_OPTIONS","value":"{column_serializer: Shrine::Plugins::Column::JsonSerializer}"}],"namespace":{"html_id":"shrine/Shrine/Plugins","kind":"module","full_name":"Shrine::Plugins","name":"Plugins"},"types":[{"html_id":"shrine/Shrine/Plugins/Column/AttacherClassMethods","path":"Shrine/Plugins/Column/AttacherClassMethods.html","kind":"module","full_name":"Shrine::Plugins::Column::AttacherClassMethods","name":"AttacherClassMethods","abstract":false,"locations":[{"filename":"src/shrine/plugins/column.cr","line_number":31,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/column.cr#L31"}],"repository_name":"shrine","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"shrine/Shrine/Plugins/Column","kind":"module","full_name":"Shrine::Plugins::Column","name":"Column"},"instance_methods":[{"html_id":"from_column(data,**options):Attacher?-instance-method","name":"from_column","doc":"Initializes the attacher from a data hash/string expected to come\nfrom a database record column.\n\n    Attacher.from_column('{\"id\":\"...\",\"storage\":\"...\",\"metadata\":{...}}')","summary":"<p>Initializes the attacher from a data hash/string expected to come from a database record column.</p>","abstract":false,"args":[{"name":"data","external_name":"data","restriction":""}],"args_string":"(data, **options) : Attacher?","args_html":"(data, **options) : <a href=\"../../../Shrine/Attacher.html\">Attacher</a>?","location":{"filename":"src/shrine/plugins/column.cr","line_number":36,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/column.cr#L36"},"def":{"name":"from_column","args":[{"name":"data","external_name":"data","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"return_type":"Attacher | Nil","visibility":"Public","body":"attacher = new(**options)\nattacher.load_column(data)\nattacher\n"}}]},{"html_id":"shrine/Shrine/Plugins/Column/AttacherMethods","path":"Shrine/Plugins/Column/AttacherMethods.html","kind":"module","full_name":"Shrine::Plugins::Column::AttacherMethods","name":"AttacherMethods","abstract":false,"locations":[{"filename":"src/shrine/plugins/column.cr","line_number":43,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/column.cr#L43"}],"repository_name":"shrine","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"shrine/Shrine/Plugins/Column","kind":"module","full_name":"Shrine::Plugins::Column","name":"Column"},"constructors":[{"html_id":"new(column_serializer=self.class.shrine_class.plugin_settings.column[:column_serializer],**options)-class-method","name":"new","doc":"Allows overriding the default column serializer.","summary":"<p>Allows overriding the default column serializer.</p>","abstract":false,"args":[{"name":"column_serializer","default_value":"self.class.shrine_class.plugin_settings.column[:column_serializer]","external_name":"column_serializer","restriction":""}],"args_string":"(column_serializer = self.class.shrine_class.plugin_settings.column[:column_serializer], **options)","args_html":"(column_serializer = <span class=\"k\">self</span>.<span class=\"k\">class</span>.shrine_class.plugin_settings.column[<span class=\"n\">:column_serializer</span>], **options)","location":{"filename":"src/shrine/plugins/column.cr","line_number":48,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/column.cr#L48"},"def":{"name":"new","args":[{"name":"column_serializer","default_value":"self.class.shrine_class.plugin_settings.column[:column_serializer]","external_name":"column_serializer","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"visibility":"Public","body":"_ = allocate\n_.initialize(column_serializer, **options)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"column_data:String?-instance-method","name":"column_data","doc":"Returns attacher data as a serialized string (JSON by default).\n\n    attacher.column_data #=> '{\"id\":\"...\",\"storage\":\"...\",\"metadata\":{...}}'","summary":"<p>Returns attacher data as a serialized string (JSON by default).</p>","abstract":false,"location":{"filename":"src/shrine/plugins/column.cr","line_number":68,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/column.cr#L68"},"def":{"name":"column_data","return_type":"String | Nil","visibility":"Public","body":"column_serializer.dump(data)"}},{"html_id":"column_serializer:Shrine::Plugins::Column::BaseSerializer.class-instance-method","name":"column_serializer","doc":"Column serializer object.","summary":"<p>Column serializer object.</p>","abstract":false,"location":{"filename":"src/shrine/plugins/column.cr","line_number":45,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/column.cr#L45"},"def":{"name":"column_serializer","return_type":"Shrine::Plugins::Column::BaseSerializer.class","visibility":"Public","body":"@column_serializer"}},{"html_id":"load_column(data:String):UploadedFile-instance-method","name":"load_column","doc":"Loads attachment from column data.\n\n    attacher.file #=> nil\n    attacher.load_column('{\"id\":\"...\",\"storage\":\"...\",\"metadata\":{...}}')\n    attacher.file #=> #<Shrine::UploadedFile>","summary":"<p>Loads attachment from column data.</p>","abstract":false,"args":[{"name":"data","external_name":"data","restriction":"String"}],"args_string":"(data : String) : UploadedFile","args_html":"(data : String) : <a href=\"../../../Shrine/UploadedFile.html\">UploadedFile</a>","location":{"filename":"src/shrine/plugins/column.cr","line_number":57,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/column.cr#L57"},"def":{"name":"load_column","args":[{"name":"data","external_name":"data","restriction":"String"}],"return_type":"UploadedFile","visibility":"Public","body":"load_data(column_serializer.load(data))"}},{"html_id":"load_column(data:Nil):Nil-instance-method","name":"load_column","abstract":false,"args":[{"name":"data","external_name":"data","restriction":"Nil"}],"args_string":"(data : Nil) : Nil","args_html":"(data : Nil) : Nil","location":{"filename":"src/shrine/plugins/column.cr","line_number":61,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/column.cr#L61"},"def":{"name":"load_column","args":[{"name":"data","external_name":"data","restriction":"Nil"}],"return_type":"Nil","visibility":"Public","body":"load_data(data)"}}]},{"html_id":"shrine/Shrine/Plugins/Column/BaseSerializer","path":"Shrine/Plugins/Column/BaseSerializer.html","kind":"class","full_name":"Shrine::Plugins::Column::BaseSerializer","name":"BaseSerializer","abstract":true,"superclass":{"html_id":"shrine/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"shrine/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"shrine/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/shrine/plugins/column.cr","line_number":4,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/column.cr#L4"}],"repository_name":"shrine","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"shrine/Shrine/Plugins/Column/JsonSerializer","kind":"class","full_name":"Shrine::Plugins::Column::JsonSerializer","name":"JsonSerializer"}],"namespace":{"html_id":"shrine/Shrine/Plugins/Column","kind":"module","full_name":"Shrine::Plugins::Column","name":"Column"},"class_methods":[{"html_id":"dump(data)-class-method","name":"dump","doc":"Since we cannot make class level method abstract we raise NotImplementedError\nhttps://github.com/crystal-lang/crystal/issues/5956\n","summary":"<p>Since we cannot make class level method abstract we raise NotImplementedError https://github.com/crystal-lang/crystal/issues/5956</p>","abstract":false,"args":[{"name":"data","external_name":"data","restriction":""}],"args_string":"(data)","args_html":"(data)","location":{"filename":"src/shrine/plugins/column.cr","line_number":8,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/column.cr#L8"},"def":{"name":"dump","args":[{"name":"data","external_name":"data","restriction":""}],"visibility":"Public","body":"raise(NotImplementedError.new(\"Implement method .dump\"))"}},{"html_id":"load(data)-class-method","name":"load","abstract":false,"args":[{"name":"data","external_name":"data","restriction":""}],"args_string":"(data)","args_html":"(data)","location":{"filename":"src/shrine/plugins/column.cr","line_number":12,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/column.cr#L12"},"def":{"name":"load","args":[{"name":"data","external_name":"data","restriction":""}],"visibility":"Public","body":"raise(NotImplementedError.new(\"Implement method .load\"))"}}]},{"html_id":"shrine/Shrine/Plugins/Column/JsonSerializer","path":"Shrine/Plugins/Column/JsonSerializer.html","kind":"class","full_name":"Shrine::Plugins::Column::JsonSerializer","name":"JsonSerializer","abstract":false,"superclass":{"html_id":"shrine/Shrine/Plugins/Column/BaseSerializer","kind":"class","full_name":"Shrine::Plugins::Column::BaseSerializer","name":"BaseSerializer"},"ancestors":[{"html_id":"shrine/Shrine/Plugins/Column/BaseSerializer","kind":"class","full_name":"Shrine::Plugins::Column::BaseSerializer","name":"BaseSerializer"},{"html_id":"shrine/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"shrine/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/shrine/plugins/column.cr","line_number":17,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/column.cr#L17"}],"repository_name":"shrine","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"shrine/Shrine/Plugins/Column","kind":"module","full_name":"Shrine::Plugins::Column","name":"Column"},"class_methods":[{"html_id":"dump(data)-class-method","name":"dump","abstract":false,"args":[{"name":"data","external_name":"data","restriction":""}],"args_string":"(data)","args_html":"(data)","location":{"filename":"src/shrine/plugins/column.cr","line_number":18,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/column.cr#L18"},"def":{"name":"dump","args":[{"name":"data","external_name":"data","restriction":""}],"visibility":"Public","body":"data.try(&.to_json)"}},{"html_id":"load(data)-class-method","name":"load","abstract":false,"args":[{"name":"data","external_name":"data","restriction":""}],"args_string":"(data)","args_html":"(data)","location":{"filename":"src/shrine/plugins/column.cr","line_number":22,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/column.cr#L22"},"def":{"name":"load","args":[{"name":"data","external_name":"data","restriction":""}],"visibility":"Public","body":"Hash(String, String | UploadedFile::MetadataType).from_json(data)"}}]}]},{"html_id":"shrine/Shrine/Plugins/DetermineMimeType","path":"Shrine/Plugins/DetermineMimeType.html","kind":"module","full_name":"Shrine::Plugins::DetermineMimeType","name":"DetermineMimeType","abstract":false,"locations":[{"filename":"src/shrine/plugins/determine_mime_type.cr","line_number":5,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/determine_mime_type.cr#L5"}],"repository_name":"shrine","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"DEFAULT_OPTIONS","name":"DEFAULT_OPTIONS","value":"{analyzer: :file}"}],"namespace":{"html_id":"shrine/Shrine/Plugins","kind":"module","full_name":"Shrine::Plugins","name":"Plugins"},"types":[{"html_id":"shrine/Shrine/Plugins/DetermineMimeType/ClassMethods","path":"Shrine/Plugins/DetermineMimeType/ClassMethods.html","kind":"module","full_name":"Shrine::Plugins::DetermineMimeType::ClassMethods","name":"ClassMethods","abstract":false,"locations":[{"filename":"src/shrine/plugins/determine_mime_type.cr","line_number":10,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/determine_mime_type.cr#L10"}],"repository_name":"shrine","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"shrine/Shrine/Plugins/DetermineMimeType","kind":"module","full_name":"Shrine::Plugins::DetermineMimeType","name":"DetermineMimeType"},"instance_methods":[{"html_id":"determine_mime_type(io)-instance-method","name":"determine_mime_type","doc":"Determines the MIME type of the IO object by calling the specified\nanalyzer.","summary":"<p>Determines the MIME type of the IO object by calling the specified analyzer.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":""}],"args_string":"(io)","args_html":"(io)","location":{"filename":"src/shrine/plugins/determine_mime_type.cr","line_number":13,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/determine_mime_type.cr#L13"},"def":{"name":"determine_mime_type","args":[{"name":"io","external_name":"io","restriction":""}],"visibility":"Public","body":"config = plugin_settings.determine_mime_type\nanalyzer = mime_type_analyzer(config[:analyzer])\nmime_type = analyzer.call(io)\nio.rewind\nmime_type\n"}},{"html_id":"mime_type_analyzer(name:Tools)-instance-method","name":"mime_type_analyzer","doc":"Returns callable mime type analyzer object.","summary":"<p>Returns callable mime type analyzer object.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"Tools"}],"args_string":"(name : Tools)","args_html":"(name : <a href=\"../../../Shrine/Plugins/DetermineMimeType/Tools.html\">Tools</a>)","location":{"filename":"src/shrine/plugins/determine_mime_type.cr","line_number":31,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/determine_mime_type.cr#L31"},"def":{"name":"mime_type_analyzer","args":[{"name":"name","external_name":"name","restriction":"Tools"}],"visibility":"Public","body":"MimeTypeAnalyzer.new(name)"}},{"html_id":"mime_type_analyzers-instance-method","name":"mime_type_analyzers","doc":"Returns a hash of built-in MIME type analyzers, where keys are\nanalyzer names and values are `#call`-able objects which accepts the\nIO object.","summary":"<p>Returns a hash of built-in MIME type analyzers, where keys are analyzer names and values are <code>#call</code>-able objects which accepts the IO object.</p>","abstract":false,"location":{"filename":"src/shrine/plugins/determine_mime_type.cr","line_number":26,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/determine_mime_type.cr#L26"},"def":{"name":"mime_type_analyzers","visibility":"Public","body":"MimeTypeAnalyzer::Tools"}}]},{"html_id":"shrine/Shrine/Plugins/DetermineMimeType/InstanceMethods","path":"Shrine/Plugins/DetermineMimeType/InstanceMethods.html","kind":"module","full_name":"Shrine::Plugins::DetermineMimeType::InstanceMethods","name":"InstanceMethods","abstract":false,"locations":[{"filename":"src/shrine/plugins/determine_mime_type.cr","line_number":36,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/determine_mime_type.cr#L36"}],"repository_name":"shrine","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"shrine/Shrine/Plugins/DetermineMimeType","kind":"module","full_name":"Shrine::Plugins::DetermineMimeType","name":"DetermineMimeType"}},{"html_id":"shrine/Shrine/Plugins/DetermineMimeType/MimeTypeAnalyzer","path":"Shrine/Plugins/DetermineMimeType/MimeTypeAnalyzer.html","kind":"class","full_name":"Shrine::Plugins::DetermineMimeType::MimeTypeAnalyzer","name":"MimeTypeAnalyzer","abstract":false,"superclass":{"html_id":"shrine/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"shrine/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"shrine/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/shrine/plugins/determine_mime_type.cr","line_number":49,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/determine_mime_type.cr#L49"}],"repository_name":"shrine","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"shrine/Shrine/Plugins/DetermineMimeType","kind":"module","full_name":"Shrine::Plugins::DetermineMimeType","name":"DetermineMimeType"},"constructors":[{"html_id":"new(tool:Tools)-class-method","name":"new","abstract":false,"args":[{"name":"tool","external_name":"tool","restriction":"Tools"}],"args_string":"(tool : Tools)","args_html":"(tool : <a href=\"../../../Shrine/Plugins/DetermineMimeType/Tools.html\">Tools</a>)","location":{"filename":"src/shrine/plugins/determine_mime_type.cr","line_number":50,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/determine_mime_type.cr#L50"},"def":{"name":"new","args":[{"name":"tool","external_name":"tool","restriction":"Tools"}],"visibility":"Public","body":"_ = allocate\n_.initialize(tool)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"call(io,**options)-instance-method","name":"call","abstract":false,"args":[{"name":"io","external_name":"io","restriction":""}],"args_string":"(io, **options)","args_html":"(io, **options)","location":{"filename":"src/shrine/plugins/determine_mime_type.cr","line_number":53,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/determine_mime_type.cr#L53"},"def":{"name":"call","args":[{"name":"io","external_name":"io","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"visibility":"Public","body":"mime_type = case @tool\nwhen Tools::File\n  extract_with_file(io, options)\nwhen Tools::Mime\n  extract_with_mime(io, options)\nwhen Tools::ContentType\n  extract_with_content_type(io, options)\nend\nio.rewind\nmime_type\n"}},{"html_id":"extract_filename(io)-instance-method","name":"extract_filename","abstract":false,"args":[{"name":"io","external_name":"io","restriction":""}],"args_string":"(io)","args_html":"(io)","location":{"filename":"src/shrine/plugins/determine_mime_type.cr","line_number":97,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/determine_mime_type.cr#L97"},"def":{"name":"extract_filename","args":[{"name":"io","external_name":"io","restriction":""}],"visibility":"Public","body":"if io.responds_to?(:original_filename)\n  io.original_filename\nelse\n  if io.responds_to?(:path)\n    File.basename(io.path)\n  end\nend"}},{"html_id":"extract_with_content_type(io,options)-instance-method","name":"extract_with_content_type","abstract":false,"args":[{"name":"io","external_name":"io","restriction":""},{"name":"options","external_name":"options","restriction":""}],"args_string":"(io, options)","args_html":"(io, options)","location":{"filename":"src/shrine/plugins/determine_mime_type.cr","line_number":91,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/determine_mime_type.cr#L91"},"def":{"name":"extract_with_content_type","args":[{"name":"io","external_name":"io","restriction":""},{"name":"options","external_name":"options","restriction":""}],"visibility":"Public","body":"if (io.responds_to?(:content_type)) && io.content_type\n  (io.content_type.not_nil!.split(\";\")).first\nend"}}]},{"html_id":"shrine/Shrine/Plugins/DetermineMimeType/Tools","path":"Shrine/Plugins/DetermineMimeType/Tools.html","kind":"enum","full_name":"Shrine::Plugins::DetermineMimeType::Tools","name":"Tools","abstract":false,"ancestors":[{"html_id":"shrine/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"shrine/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"shrine/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"shrine/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/shrine/plugins/determine_mime_type.cr","line_number":43,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/determine_mime_type.cr#L43"}],"repository_name":"shrine","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"File","name":"File","value":"0"},{"id":"Mime","name":"Mime","value":"1"},{"id":"ContentType","name":"ContentType","value":"2"}],"namespace":{"html_id":"shrine/Shrine/Plugins/DetermineMimeType","kind":"module","full_name":"Shrine::Plugins::DetermineMimeType","name":"DetermineMimeType"},"instance_methods":[{"html_id":"content_type?-instance-method","name":"content_type?","abstract":false,"location":{"filename":"src/shrine/plugins/determine_mime_type.cr","line_number":46,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/determine_mime_type.cr#L46"},"def":{"name":"content_type?","visibility":"Public","body":"self == ContentType"}},{"html_id":"file?-instance-method","name":"file?","abstract":false,"location":{"filename":"src/shrine/plugins/determine_mime_type.cr","line_number":44,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/determine_mime_type.cr#L44"},"def":{"name":"file?","visibility":"Public","body":"self == File"}},{"html_id":"mime?-instance-method","name":"mime?","abstract":false,"location":{"filename":"src/shrine/plugins/determine_mime_type.cr","line_number":45,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/determine_mime_type.cr#L45"},"def":{"name":"mime?","visibility":"Public","body":"self == Mime"}}]}]},{"html_id":"shrine/Shrine/Plugins/StoreDimensions","path":"Shrine/Plugins/StoreDimensions.html","kind":"module","full_name":"Shrine::Plugins::StoreDimensions","name":"StoreDimensions","abstract":false,"locations":[{"filename":"src/shrine/plugins/store_dimensions.cr","line_number":5,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/store_dimensions.cr#L5"}],"repository_name":"shrine","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"DEFAULT_OPTIONS","name":"DEFAULT_OPTIONS","value":"{analyzer: :fastimage}"}],"namespace":{"html_id":"shrine/Shrine/Plugins","kind":"module","full_name":"Shrine::Plugins","name":"Plugins"},"types":[{"html_id":"shrine/Shrine/Plugins/StoreDimensions/ClassMethods","path":"Shrine/Plugins/StoreDimensions/ClassMethods.html","kind":"module","full_name":"Shrine::Plugins::StoreDimensions::ClassMethods","name":"ClassMethods","abstract":false,"locations":[{"filename":"src/shrine/plugins/store_dimensions.cr","line_number":10,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/store_dimensions.cr#L10"}],"repository_name":"shrine","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"shrine/Shrine/Plugins/StoreDimensions","kind":"module","full_name":"Shrine::Plugins::StoreDimensions","name":"StoreDimensions"},"instance_methods":[{"html_id":"dimensions_analyzer(name:Tools)-instance-method","name":"dimensions_analyzer","doc":"Returns callable mime type analyzer object.","summary":"<p>Returns callable mime type analyzer object.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"Tools"}],"args_string":"(name : Tools)","args_html":"(name : <a href=\"../../../Shrine/Plugins/StoreDimensions/Tools.html\">Tools</a>)","location":{"filename":"src/shrine/plugins/store_dimensions.cr","line_number":31,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/store_dimensions.cr#L31"},"def":{"name":"dimensions_analyzer","args":[{"name":"name","external_name":"name","restriction":"Tools"}],"visibility":"Public","body":"DimensionsAnalyzer.new(name)"}},{"html_id":"dimensions_analyzers-instance-method","name":"dimensions_analyzers","doc":"Returns a hash of built-in MIME type analyzers, where keys are\nanalyzer names and values are `#call`-able objects which accepts the\nIO object.","summary":"<p>Returns a hash of built-in MIME type analyzers, where keys are analyzer names and values are <code>#call</code>-able objects which accepts the IO object.</p>","abstract":false,"location":{"filename":"src/shrine/plugins/store_dimensions.cr","line_number":26,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/store_dimensions.cr#L26"},"def":{"name":"dimensions_analyzers","visibility":"Public","body":"StoreDimensions::Tools"}},{"html_id":"extract_dimensions(io)-instance-method","name":"extract_dimensions","doc":"Determines the dimensions of the IO object by calling the specified\nanalyzer.","summary":"<p>Determines the dimensions of the IO object by calling the specified analyzer.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":""}],"args_string":"(io)","args_html":"(io)","location":{"filename":"src/shrine/plugins/store_dimensions.cr","line_number":13,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/store_dimensions.cr#L13"},"def":{"name":"extract_dimensions","args":[{"name":"io","external_name":"io","restriction":""}],"visibility":"Public","body":"config = plugin_settings.store_dimensions\nanalyzer = dimensions_analyzer(config[:analyzer])\ndimensions = analyzer.call(io)\nio.rewind\ndimensions\n"}}]},{"html_id":"shrine/Shrine/Plugins/StoreDimensions/DimensionsAnalyzer","path":"Shrine/Plugins/StoreDimensions/DimensionsAnalyzer.html","kind":"class","full_name":"Shrine::Plugins::StoreDimensions::DimensionsAnalyzer","name":"DimensionsAnalyzer","abstract":false,"superclass":{"html_id":"shrine/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"shrine/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"shrine/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/shrine/plugins/store_dimensions.cr","line_number":64,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/store_dimensions.cr#L64"}],"repository_name":"shrine","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"shrine/Shrine/Plugins/StoreDimensions","kind":"module","full_name":"Shrine::Plugins::StoreDimensions","name":"StoreDimensions"},"constructors":[{"html_id":"new(tool:Tools)-class-method","name":"new","abstract":false,"args":[{"name":"tool","external_name":"tool","restriction":"Tools"}],"args_string":"(tool : Tools)","args_html":"(tool : <a href=\"../../../Shrine/Plugins/StoreDimensions/Tools.html\">Tools</a>)","location":{"filename":"src/shrine/plugins/store_dimensions.cr","line_number":65,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/store_dimensions.cr#L65"},"def":{"name":"new","args":[{"name":"tool","external_name":"tool","restriction":"Tools"}],"visibility":"Public","body":"_ = allocate\n_.initialize(tool)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"call(io:IO):Tuple(UInt16,UInt16)-instance-method","name":"call","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Tuple(UInt16, UInt16)","args_html":"(io : IO) : Tuple(UInt16, UInt16)","location":{"filename":"src/shrine/plugins/store_dimensions.cr","line_number":68,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/store_dimensions.cr#L68"},"def":{"name":"call","args":[{"name":"io","external_name":"io","restriction":"IO"}],"return_type":"Tuple(UInt16, UInt16)","visibility":"Public","body":"dimensions = case @tool\nwhen Tools::FastImage\n  extract_with_fastimage(io)\nwhen Tools::Identify\n  extract_with_identify(io)\nelse\n  raise(Error.new(\"Unknown tool #{@tool} for StoreDimensions plugin\"))\nend\nio.rewind\ndimensions\n"}}]},{"html_id":"shrine/Shrine/Plugins/StoreDimensions/FileMethods","path":"Shrine/Plugins/StoreDimensions/FileMethods.html","kind":"module","full_name":"Shrine::Plugins::StoreDimensions::FileMethods","name":"FileMethods","abstract":false,"locations":[{"filename":"src/shrine/plugins/store_dimensions.cr","line_number":50,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/store_dimensions.cr#L50"}],"repository_name":"shrine","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"shrine/Shrine/Plugins/StoreDimensions","kind":"module","full_name":"Shrine::Plugins::StoreDimensions","name":"StoreDimensions"},"instance_methods":[{"html_id":"dimensions:Tuple(UInt16)-instance-method","name":"dimensions","abstract":false,"location":{"filename":"src/shrine/plugins/store_dimensions.cr","line_number":59,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/store_dimensions.cr#L59"},"def":{"name":"dimensions","return_type":"Tuple(UInt16)","visibility":"Public","body":"if width || height\n  {width, height}\nend"}},{"html_id":"height:UInt16-instance-method","name":"height","abstract":false,"location":{"filename":"src/shrine/plugins/store_dimensions.cr","line_number":55,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/store_dimensions.cr#L55"},"def":{"name":"height","return_type":"UInt16","visibility":"Public","body":"metadata[\"height\"]"}},{"html_id":"width:UInt16-instance-method","name":"width","abstract":false,"location":{"filename":"src/shrine/plugins/store_dimensions.cr","line_number":51,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/store_dimensions.cr#L51"},"def":{"name":"width","return_type":"UInt16","visibility":"Public","body":"metadata[\"width\"]"}}]},{"html_id":"shrine/Shrine/Plugins/StoreDimensions/IdentifyAnalyzer","path":"Shrine/Plugins/StoreDimensions/IdentifyAnalyzer.html","kind":"class","full_name":"Shrine::Plugins::StoreDimensions::IdentifyAnalyzer","name":"IdentifyAnalyzer","abstract":false,"superclass":{"html_id":"shrine/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"shrine/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"shrine/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/shrine/plugins/store_dimensions.cr","line_number":95,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/store_dimensions.cr#L95"}],"repository_name":"shrine","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"shrine/Shrine/Plugins/StoreDimensions","kind":"module","full_name":"Shrine::Plugins::StoreDimensions","name":"StoreDimensions"},"doc":"A bare-bones wrapper for ImageMagick's identify command","summary":"<p>A bare-bones wrapper for ImageMagick's identify command</p>","constructors":[{"html_id":"new(io:IO)-class-method","name":"new","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","args_html":"(io : IO)","location":{"filename":"src/shrine/plugins/store_dimensions.cr","line_number":96,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/store_dimensions.cr#L96"},"def":{"name":"new","args":[{"name":"io","external_name":"io","restriction":"IO"}],"visibility":"Public","body":"_ = allocate\n_.initialize(io)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"dimensions:Tuple(UInt16,UInt16)-instance-method","name":"dimensions","doc":"Extract dimensions from a given file","summary":"<p>Extract dimensions from a given file</p>","abstract":false,"location":{"filename":"src/shrine/plugins/store_dimensions.cr","line_number":100,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/store_dimensions.cr#L100"},"def":{"name":"dimensions","return_type":"Tuple(UInt16, UInt16)","visibility":"Public","body":"dimensions = (identify([\"-format\", \"%[fx:w] %[fx:h]\"])).split.map(&.to_u16)\n{dimensions[0], dimensions[1]}\n"}}]},{"html_id":"shrine/Shrine/Plugins/StoreDimensions/InstanceMethods","path":"Shrine/Plugins/StoreDimensions/InstanceMethods.html","kind":"module","full_name":"Shrine::Plugins::StoreDimensions::InstanceMethods","name":"InstanceMethods","abstract":false,"locations":[{"filename":"src/shrine/plugins/store_dimensions.cr","line_number":36,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/store_dimensions.cr#L36"}],"repository_name":"shrine","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"shrine/Shrine/Plugins/StoreDimensions","kind":"module","full_name":"Shrine::Plugins::StoreDimensions","name":"StoreDimensions"}},{"html_id":"shrine/Shrine/Plugins/StoreDimensions/Tools","path":"Shrine/Plugins/StoreDimensions/Tools.html","kind":"enum","full_name":"Shrine::Plugins::StoreDimensions::Tools","name":"Tools","abstract":false,"ancestors":[{"html_id":"shrine/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"shrine/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"shrine/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"shrine/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/shrine/plugins/store_dimensions.cr","line_number":45,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/store_dimensions.cr#L45"}],"repository_name":"shrine","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"FastImage","name":"FastImage","value":"0"},{"id":"Identify","name":"Identify","value":"1"}],"namespace":{"html_id":"shrine/Shrine/Plugins/StoreDimensions","kind":"module","full_name":"Shrine::Plugins::StoreDimensions","name":"StoreDimensions"},"instance_methods":[{"html_id":"fast_image?-instance-method","name":"fast_image?","abstract":false,"location":{"filename":"src/shrine/plugins/store_dimensions.cr","line_number":46,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/store_dimensions.cr#L46"},"def":{"name":"fast_image?","visibility":"Public","body":"self == FastImage"}},{"html_id":"identify?-instance-method","name":"identify?","abstract":false,"location":{"filename":"src/shrine/plugins/store_dimensions.cr","line_number":47,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/plugins/store_dimensions.cr#L47"},"def":{"name":"identify?","visibility":"Public","body":"self == Identify"}}]}]}]},{"html_id":"shrine/Shrine/PluginSettings","path":"Shrine/PluginSettings.html","kind":"struct","full_name":"Shrine::PluginSettings","name":"PluginSettings","abstract":false,"superclass":{"html_id":"shrine/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"shrine/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"shrine/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"shrine/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/shrine.cr","line_number":35,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine.cr#L35"}],"repository_name":"shrine","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"shrine/Shrine","kind":"class","full_name":"Shrine","name":"Shrine"},"constructors":[{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/shrine.cr","line_number":35,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine.cr#L35"},"def":{"name":"new","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[{"html_id":"all-instance-method","name":"all","abstract":false,"location":{"filename":"src/shrine.cr","line_number":36,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine.cr#L36"},"def":{"name":"all","visibility":"Public","body":"[] of Nil"}},{"html_id":"initialize-instance-method","name":"initialize","abstract":false,"location":{"filename":"src/shrine.cr","line_number":35,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine.cr#L35"},"def":{"name":"initialize","visibility":"Public","body":""}}]},{"html_id":"shrine/Shrine/Storage","path":"Shrine/Storage.html","kind":"module","full_name":"Shrine::Storage","name":"Storage","abstract":false,"locations":[{"filename":"src/shrine/storage/base.cr","line_number":4,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/base.cr#L4"},{"filename":"src/shrine/storage/file_system.cr","line_number":4,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/file_system.cr#L4"},{"filename":"src/shrine/storage/memory.cr","line_number":4,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/memory.cr#L4"},{"filename":"src/shrine/storage/s3.cr","line_number":7,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/s3.cr#L7"}],"repository_name":"shrine","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"shrine/Shrine","kind":"class","full_name":"Shrine","name":"Shrine"},"types":[{"html_id":"shrine/Shrine/Storage/Base","path":"Shrine/Storage/Base.html","kind":"class","full_name":"Shrine::Storage::Base","name":"Base","abstract":true,"superclass":{"html_id":"shrine/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"shrine/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"shrine/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/shrine/storage/base.cr","line_number":5,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/base.cr#L5"}],"repository_name":"shrine","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"shrine/Shrine/Storage/FileSystem","kind":"class","full_name":"Shrine::Storage::FileSystem","name":"FileSystem"},{"html_id":"shrine/Shrine/Storage/Memory","kind":"class","full_name":"Shrine::Storage::Memory","name":"Memory"},{"html_id":"shrine/Shrine/Storage/S3","kind":"class","full_name":"Shrine::Storage::S3","name":"S3"}],"namespace":{"html_id":"shrine/Shrine/Storage","kind":"module","full_name":"Shrine::Storage","name":"Storage"},"instance_methods":[{"html_id":"clean(path:String)-instance-method","name":"clean","doc":"cleans the path in the storage","summary":"<p>cleans the path in the storage</p>","abstract":true,"args":[{"name":"path","external_name":"path","restriction":"String"}],"args_string":"(path : String)","args_html":"(path : String)","location":{"filename":"src/shrine/storage/base.cr","line_number":24,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/base.cr#L24"},"def":{"name":"clean","args":[{"name":"path","external_name":"path","restriction":"String"}],"visibility":"Public","body":""}},{"html_id":"clean?:Bool-instance-method","name":"clean?","abstract":false,"location":{"filename":"src/shrine/storage/base.cr","line_number":6,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/base.cr#L6"},"def":{"name":"clean?","return_type":"Bool","visibility":"Public","body":"@clean"}},{"html_id":"delete(id:String)-instance-method","name":"delete","doc":"deletes the file from the storage","summary":"<p>deletes the file from the storage</p>","abstract":true,"args":[{"name":"id","external_name":"id","restriction":"String"}],"args_string":"(id : String)","args_html":"(id : String)","location":{"filename":"src/shrine/storage/base.cr","line_number":21,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/base.cr#L21"},"def":{"name":"delete","args":[{"name":"id","external_name":"id","restriction":"String"}],"visibility":"Public","body":""}},{"html_id":"exists?(id:String):Bool-instance-method","name":"exists?","doc":"returns whether the file exists on storage","summary":"<p>returns whether the file exists on storage</p>","abstract":true,"args":[{"name":"id","external_name":"id","restriction":"String"}],"args_string":"(id : String) : Bool","args_html":"(id : String) : Bool","location":{"filename":"src/shrine/storage/base.cr","line_number":18,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/base.cr#L18"},"def":{"name":"exists?","args":[{"name":"id","external_name":"id","restriction":"String"}],"return_type":"Bool","visibility":"Public","body":""}},{"html_id":"open(id:String,**options):IO-instance-method","name":"open","doc":"returns the remote file as an IO-like object","summary":"<p>returns the remote file as an IO-like object</p>","abstract":true,"args":[{"name":"id","external_name":"id","restriction":"String"}],"args_string":"(id : String, **options) : IO","args_html":"(id : String, **options) : IO","location":{"filename":"src/shrine/storage/base.cr","line_number":12,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/base.cr#L12"},"def":{"name":"open","args":[{"name":"id","external_name":"id","restriction":"String"}],"double_splat":{"name":"options","external_name":"options","restriction":""},"return_type":"IO","visibility":"Public","body":""}},{"html_id":"upload(io:IO|UploadedFile,id:String,move=false,**options)-instance-method","name":"upload","doc":"uploads `io` to the location `id`, can accept upload options","summary":"<p>uploads <code>io</code> to the location <code>id</code>, can accept upload options</p>","abstract":true,"args":[{"name":"io","external_name":"io","restriction":"IO | UploadedFile"},{"name":"id","external_name":"id","restriction":"String"},{"name":"move","default_value":"false","external_name":"move","restriction":""}],"args_string":"(io : IO | UploadedFile, id : String, move = false, **options)","args_html":"(io : IO | <a href=\"../../Shrine/UploadedFile.html\">UploadedFile</a>, id : String, move = <span class=\"n\">false</span>, **options)","location":{"filename":"src/shrine/storage/base.cr","line_number":9,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/base.cr#L9"},"def":{"name":"upload","args":[{"name":"io","external_name":"io","restriction":"IO | UploadedFile"},{"name":"id","external_name":"id","restriction":"String"},{"name":"move","default_value":"false","external_name":"move","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"visibility":"Public","body":""}},{"html_id":"url(id:String,**options):String-instance-method","name":"url","doc":"returns URL to the remote file, can accept URL options","summary":"<p>returns URL to the remote file, can accept URL options</p>","abstract":true,"args":[{"name":"id","external_name":"id","restriction":"String"}],"args_string":"(id : String, **options) : String","args_html":"(id : String, **options) : String","location":{"filename":"src/shrine/storage/base.cr","line_number":15,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/base.cr#L15"},"def":{"name":"url","args":[{"name":"id","external_name":"id","restriction":"String"}],"double_splat":{"name":"options","external_name":"options","restriction":""},"return_type":"String","visibility":"Public","body":""}}]},{"html_id":"shrine/Shrine/Storage/FileSystem","path":"Shrine/Storage/FileSystem.html","kind":"class","full_name":"Shrine::Storage::FileSystem","name":"FileSystem","abstract":false,"superclass":{"html_id":"shrine/Shrine/Storage/Base","kind":"class","full_name":"Shrine::Storage::Base","name":"Base"},"ancestors":[{"html_id":"shrine/Shrine/Storage/Base","kind":"class","full_name":"Shrine::Storage::Base","name":"Base"},{"html_id":"shrine/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"shrine/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/shrine/storage/file_system.cr","line_number":5,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/file_system.cr#L5"}],"repository_name":"shrine","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"DEFAULT_DIRECTORY_PERMISSIONS","name":"DEFAULT_DIRECTORY_PERMISSIONS","value":"493"},{"id":"DEFAULT_PERMISSIONS","name":"DEFAULT_PERMISSIONS","value":"420"}],"namespace":{"html_id":"shrine/Shrine/Storage","kind":"module","full_name":"Shrine::Storage","name":"Storage"},"constructors":[{"html_id":"new(directory:String,prefix:String?=nil,clean=true,permissions:Int=DEFAULT_PERMISSIONS,directory_permissions:Int=DEFAULT_DIRECTORY_PERMISSIONS)-class-method","name":"new","doc":"Initializes a storage for uploading to the filesystem.\n\n:prefix\n:  The directory relative to `directory` to which files will be stored,\n   and it is included in the URL.\n\n:permissions\n:  The UNIX permissions applied to created files. Can be set to `nil`,\n   in which case the default permissions will be applied. Defaults to\n   `0644`.\n\n:directory_permissions\n:  The UNIX permissions applied to created directories. Can be set to\n   `nil`, in which case the default permissions will be applied. Defaults\n   to `0755`.\n\n:clean\n:  By default empty folders inside the directory are automatically\n   deleted, but if it happens that it causes too much load on the\n   filesystem, you can set this option to `false`.","summary":"<p>Initializes a storage for uploading to the filesystem.</p>","abstract":false,"args":[{"name":"directory","external_name":"directory","restriction":"String"},{"name":"prefix","default_value":"nil","external_name":"prefix","restriction":"String | ::Nil"},{"name":"clean","default_value":"true","external_name":"clean","restriction":""},{"name":"permissions","default_value":"DEFAULT_PERMISSIONS","external_name":"permissions","restriction":"Int"},{"name":"directory_permissions","default_value":"DEFAULT_DIRECTORY_PERMISSIONS","external_name":"directory_permissions","restriction":"Int"}],"args_string":"(directory : String, prefix : String? = nil, clean = true, permissions : Int = DEFAULT_PERMISSIONS, directory_permissions : Int = DEFAULT_DIRECTORY_PERMISSIONS)","args_html":"(directory : String, prefix : String? = <span class=\"n\">nil</span>, clean = <span class=\"n\">true</span>, permissions : Int = <span class=\"t\">DEFAULT_PERMISSIONS</span>, directory_permissions : Int = <span class=\"t\">DEFAULT_DIRECTORY_PERMISSIONS</span>)","location":{"filename":"src/shrine/storage/file_system.cr","line_number":42,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/file_system.cr#L42"},"def":{"name":"new","args":[{"name":"directory","external_name":"directory","restriction":"String"},{"name":"prefix","default_value":"nil","external_name":"prefix","restriction":"String | ::Nil"},{"name":"clean","default_value":"true","external_name":"clean","restriction":""},{"name":"permissions","default_value":"DEFAULT_PERMISSIONS","external_name":"permissions","restriction":"Int"},{"name":"directory_permissions","default_value":"DEFAULT_DIRECTORY_PERMISSIONS","external_name":"directory_permissions","restriction":"Int"}],"visibility":"Public","body":"_ = allocate\n_.initialize(directory, prefix, clean, permissions, directory_permissions)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"delete(id:String)-instance-method","name":"delete","doc":"Deletes the file, and by default deletes the containing directory if\nit's empty.","summary":"<p>Deletes the file, and by default deletes the containing directory if it's empty.</p>","abstract":false,"args":[{"name":"id","external_name":"id","restriction":"String"}],"args_string":"(id : String)","args_html":"(id : String)","location":{"filename":"src/shrine/storage/file_system.cr","line_number":89,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/file_system.cr#L89"},"def":{"name":"delete","args":[{"name":"id","external_name":"id","restriction":"String"}],"visibility":"Public","body":"path = path(id)\nFile.delete(path)\nif clean?\n  clean(path)\nend\n"}},{"html_id":"directory:String-instance-method","name":"directory","abstract":false,"location":{"filename":"src/shrine/storage/file_system.cr","line_number":6,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/file_system.cr#L6"},"def":{"name":"directory","return_type":"String","visibility":"Public","body":"@directory"}},{"html_id":"directory_permissions:Int32-instance-method","name":"directory_permissions","abstract":false,"location":{"filename":"src/shrine/storage/file_system.cr","line_number":9,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/file_system.cr#L9"},"def":{"name":"directory_permissions","visibility":"Public","body":"@directory_permissions"}},{"html_id":"exists?(id:String):Bool-instance-method","name":"exists?","doc":"Returns true if the file exists on the filesystem.","summary":"<p>Returns true if the file exists on the filesystem.</p>","abstract":false,"args":[{"name":"id","external_name":"id","restriction":"String"}],"args_string":"(id : String) : Bool","args_html":"(id : String) : Bool","location":{"filename":"src/shrine/storage/file_system.cr","line_number":67,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/file_system.cr#L67"},"def":{"name":"exists?","args":[{"name":"id","external_name":"id","restriction":"String"}],"return_type":"Bool","visibility":"Public","body":"File.exists?(path(id))"}},{"html_id":"expanded_directory:String-instance-method","name":"expanded_directory","abstract":false,"location":{"filename":"src/shrine/storage/file_system.cr","line_number":14,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/file_system.cr#L14"},"def":{"name":"expanded_directory","return_type":"String","visibility":"Public","body":"if relative_prefix\n  File.expand_path(File.join(directory, relative_prefix.not_nil!))\nelse\n  File.expand_path(directory)\nend"}},{"html_id":"open(id:String,**options):File-instance-method","name":"open","doc":"Opens the file on the given location in read mode. Accepts additional\n`File.open` arguments.","summary":"<p>Opens the file on the given location in read mode.</p>","abstract":false,"args":[{"name":"id","external_name":"id","restriction":"String"}],"args_string":"(id : String, **options) : File","args_html":"(id : String, **options) : File","location":{"filename":"src/shrine/storage/file_system.cr","line_number":59,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/file_system.cr#L59"},"def":{"name":"open","args":[{"name":"id","external_name":"id","restriction":"String"}],"double_splat":{"name":"options","external_name":"options","restriction":""},"return_type":"File","visibility":"Public","body":"begin\n  File.open(path(id), mode: \"rb\")\nrescue RuntimeError\n  raise(Shrine::FileNotFound.new(\"file #{id.inspect} not found on storage\"))\nend"}},{"html_id":"path(id:String):String-instance-method","name":"path","doc":"Returns the full path to the file.","summary":"<p>Returns the full path to the file.</p>","abstract":false,"args":[{"name":"id","external_name":"id","restriction":"String"}],"args_string":"(id : String) : String","args_html":"(id : String) : String","location":{"filename":"src/shrine/storage/file_system.cr","line_number":72,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/file_system.cr#L72"},"def":{"name":"path","args":[{"name":"id","external_name":"id","restriction":"String"}],"return_type":"String","visibility":"Public","body":"File.join(expanded_directory, id.gsub(\"/\", File::SEPARATOR))"}},{"html_id":"permissions:Int32-instance-method","name":"permissions","abstract":false,"location":{"filename":"src/shrine/storage/file_system.cr","line_number":8,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/file_system.cr#L8"},"def":{"name":"permissions","visibility":"Public","body":"@permissions"}},{"html_id":"prefix:String?-instance-method","name":"prefix","abstract":false,"location":{"filename":"src/shrine/storage/file_system.cr","line_number":7,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/file_system.cr#L7"},"def":{"name":"prefix","return_type":"String | ::Nil","visibility":"Public","body":"@prefix"}},{"html_id":"upload(io:IO|UploadedFile,id:String,move=false,**options)-instance-method","name":"upload","doc":"Copies the file into the given location.","summary":"<p>Copies the file into the given location.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO | UploadedFile"},{"name":"id","external_name":"id","restriction":"String"},{"name":"move","default_value":"false","external_name":"move","restriction":""}],"args_string":"(io : IO | UploadedFile, id : String, move = false, **options)","args_html":"(io : IO | <a href=\"../../Shrine/UploadedFile.html\">UploadedFile</a>, id : String, move = <span class=\"n\">false</span>, **options)","location":{"filename":"src/shrine/storage/file_system.cr","line_number":49,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/file_system.cr#L49"},"def":{"name":"upload","args":[{"name":"io","external_name":"io","restriction":"IO | UploadedFile"},{"name":"id","external_name":"id","restriction":"String"},{"name":"move","default_value":"false","external_name":"move","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"visibility":"Public","body":"if move && (movable?(io))\n  move(io, path!(id))\nelse\n  File.write(path!(id), content: io, perm: permissions)\nend"}},{"html_id":"url(id:String,host:String?=nil,**options):String-instance-method","name":"url","doc":"If #relative_prefix is not present, returns a path composed of #directory and\nthe given `id`. If #relative_prefix is present, it excludes the #directory part\nfrom the returned path (e.g. #directory can be set to \"public\" folder).\nBoth cases accept a `:host` value which will be prefixed to the\ngenerated path.\ndef url(id, host : String? = nil, **options)","summary":"<p>If #relative_prefix is not present, returns a path composed of #directory and the given <code>id</code>.</p>","abstract":false,"args":[{"name":"id","external_name":"id","restriction":"String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"String | ::Nil"}],"args_string":"(id : String, host : String? = nil, **options) : String","args_html":"(id : String, host : String? = <span class=\"n\">nil</span>, **options) : String","location":{"filename":"src/shrine/storage/file_system.cr","line_number":82,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/file_system.cr#L82"},"def":{"name":"url","args":[{"name":"id","external_name":"id","restriction":"String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"String | ::Nil"}],"double_splat":{"name":"options","external_name":"options","restriction":""},"return_type":"String","visibility":"Public","body":"path = (relative_prefix ? relative_path(id) : path(id)).to_s\nhost ? host + path : path\n"}}]},{"html_id":"shrine/Shrine/Storage/Memory","path":"Shrine/Storage/Memory.html","kind":"class","full_name":"Shrine::Storage::Memory","name":"Memory","abstract":false,"superclass":{"html_id":"shrine/Shrine/Storage/Base","kind":"class","full_name":"Shrine::Storage::Base","name":"Base"},"ancestors":[{"html_id":"shrine/Shrine/Storage/Base","kind":"class","full_name":"Shrine::Storage::Base","name":"Base"},{"html_id":"shrine/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"shrine/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/shrine/storage/memory.cr","line_number":5,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/memory.cr#L5"}],"repository_name":"shrine","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"shrine/Shrine/Storage","kind":"module","full_name":"Shrine::Storage","name":"Storage"},"constructors":[{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/shrine/storage/memory.cr","line_number":8,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/memory.cr#L8"},"def":{"name":"new","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"clear!-instance-method","name":"clear!","abstract":false,"location":{"filename":"src/shrine/storage/memory.cr","line_number":48,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/memory.cr#L48"},"def":{"name":"clear!","visibility":"Public","body":"store.clear"}},{"html_id":"delete(id:String)-instance-method","name":"delete","doc":"deletes the file from the storage","summary":"<p>deletes the file from the storage</p>","abstract":false,"args":[{"name":"id","external_name":"id","restriction":"String"}],"args_string":"(id : String)","args_html":"(id : String)","location":{"filename":"src/shrine/storage/memory.cr","line_number":39,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/memory.cr#L39"},"def":{"name":"delete","args":[{"name":"id","external_name":"id","restriction":"String"}],"visibility":"Public","body":"store.delete(id)"}},{"html_id":"delete_prefixed(delete_prefix:String)-instance-method","name":"delete_prefixed","abstract":false,"args":[{"name":"delete_prefix","external_name":"delete_prefix","restriction":"String"}],"args_string":"(delete_prefix : String)","args_html":"(delete_prefix : String)","location":{"filename":"src/shrine/storage/memory.cr","line_number":43,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/memory.cr#L43"},"def":{"name":"delete_prefixed","args":[{"name":"delete_prefix","external_name":"delete_prefix","restriction":"String"}],"visibility":"Public","body":"delete_prefix = (delete_prefix.chomp(\"/\")) + \"/\"\nstore.delete_if do |key, _value|\n  key.start_with?(delete_prefix)\nend\n"}},{"html_id":"exists?(id:String):Bool-instance-method","name":"exists?","doc":"returns whether the file exists on storage","summary":"<p>returns whether the file exists on storage</p>","abstract":false,"args":[{"name":"id","external_name":"id","restriction":"String"}],"args_string":"(id : String) : Bool","args_html":"(id : String) : Bool","location":{"filename":"src/shrine/storage/memory.cr","line_number":27,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/memory.cr#L27"},"def":{"name":"exists?","args":[{"name":"id","external_name":"id","restriction":"String"}],"return_type":"Bool","visibility":"Public","body":"store.has_key?(id)"}},{"html_id":"open(id:String):IO-instance-method","name":"open","abstract":false,"args":[{"name":"id","external_name":"id","restriction":"String"}],"args_string":"(id : String) : IO","args_html":"(id : String) : IO","location":{"filename":"src/shrine/storage/memory.cr","line_number":16,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/memory.cr#L16"},"def":{"name":"open","args":[{"name":"id","external_name":"id","restriction":"String"}],"return_type":"IO","visibility":"Public","body":"begin\n  IO::Memory.new(store[id])\nrescue KeyError\n  raise(Shrine::FileNotFound.new(\"file #{id.inspect} not found on storage\"))\nend"}},{"html_id":"open(id:String,**options):IO-instance-method","name":"open","doc":"returns the remote file as an IO-like object","summary":"<p>returns the remote file as an IO-like object</p>","abstract":false,"args":[{"name":"id","external_name":"id","restriction":"String"}],"args_string":"(id : String, **options) : IO","args_html":"(id : String, **options) : IO","location":{"filename":"src/shrine/storage/memory.cr","line_number":23,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/memory.cr#L23"},"def":{"name":"open","args":[{"name":"id","external_name":"id","restriction":"String"}],"double_splat":{"name":"options","external_name":"options","restriction":""},"return_type":"IO","visibility":"Public","body":"open(id)"}},{"html_id":"path(id:String):String-instance-method","name":"path","abstract":false,"args":[{"name":"id","external_name":"id","restriction":"String"}],"args_string":"(id : String) : String","args_html":"(id : String) : String","location":{"filename":"src/shrine/storage/memory.cr","line_number":35,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/memory.cr#L35"},"def":{"name":"path","args":[{"name":"id","external_name":"id","restriction":"String"}],"return_type":"String","visibility":"Public","body":"id"}},{"html_id":"store:Hash(String,String)-instance-method","name":"store","abstract":false,"location":{"filename":"src/shrine/storage/memory.cr","line_number":6,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/memory.cr#L6"},"def":{"name":"store","visibility":"Public","body":"@store"}},{"html_id":"upload(io:IO|UploadedFile,id:String,move=false,**options)-instance-method","name":"upload","doc":"uploads `io` to the location `id`, can accept upload options","summary":"<p>uploads <code>io</code> to the location <code>id</code>, can accept upload options</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO | UploadedFile"},{"name":"id","external_name":"id","restriction":"String"},{"name":"move","default_value":"false","external_name":"move","restriction":""}],"args_string":"(io : IO | UploadedFile, id : String, move = false, **options)","args_html":"(io : IO | <a href=\"../../Shrine/UploadedFile.html\">UploadedFile</a>, id : String, move = <span class=\"n\">false</span>, **options)","location":{"filename":"src/shrine/storage/memory.cr","line_number":12,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/memory.cr#L12"},"def":{"name":"upload","args":[{"name":"io","external_name":"io","restriction":"IO | UploadedFile"},{"name":"id","external_name":"id","restriction":"String"},{"name":"move","default_value":"false","external_name":"move","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"visibility":"Public","body":"store[id.to_s] = io.gets_to_end"}},{"html_id":"url(id:String,**options):String-instance-method","name":"url","doc":"returns URL to the remote file, can accept URL options","summary":"<p>returns URL to the remote file, can accept URL options</p>","abstract":false,"args":[{"name":"id","external_name":"id","restriction":"String"}],"args_string":"(id : String, **options) : String","args_html":"(id : String, **options) : String","location":{"filename":"src/shrine/storage/memory.cr","line_number":31,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/memory.cr#L31"},"def":{"name":"url","args":[{"name":"id","external_name":"id","restriction":"String"}],"double_splat":{"name":"options","external_name":"options","restriction":""},"return_type":"String","visibility":"Public","body":"\"memory://#{path(id)}\""}}]},{"html_id":"shrine/Shrine/Storage/S3","path":"Shrine/Storage/S3.html","kind":"class","full_name":"Shrine::Storage::S3","name":"S3","abstract":false,"superclass":{"html_id":"shrine/Shrine/Storage/Base","kind":"class","full_name":"Shrine::Storage::Base","name":"Base"},"ancestors":[{"html_id":"shrine/Shrine/Storage/Base","kind":"class","full_name":"Shrine::Storage::Base","name":"Base"},{"html_id":"shrine/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"shrine/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/shrine/storage/s3.cr","line_number":8,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/s3.cr#L8"}],"repository_name":"shrine","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"shrine/Shrine/Storage","kind":"module","full_name":"Shrine::Storage","name":"Storage"},"constructors":[{"html_id":"new(bucket:String,client:Awscr::S3::Client?,prefix:String?=nil,upload_options:Hash(String,String)=Hash(String,String).new,public:Bool=false)-class-method","name":"new","doc":"Initializes a storage for uploading to S3. All options are forwarded to\n[`Shrine::Storage::S3#initialize`], except the following:\n\n:bucket\n: (Required). Name of the S3 bucket.\n\n:client\n: By default an `Awscr::S3::Client` instance is created internally from\n  additional options, but you can use this option to provide your own\n  client.\n\n:prefix\n: \"Directory\" inside the bucket to store files into.\n\n:upload_options\n: Additional options that will be used for uploading files.\n\n:public\n: Sets public access to all uploading files.\n","summary":"<p>Initializes a storage for uploading to S3.</p>","abstract":false,"args":[{"name":"bucket","external_name":"bucket","restriction":"String"},{"name":"client","external_name":"client","restriction":"Awscr::S3::Client | ::Nil"},{"name":"prefix","default_value":"nil","external_name":"prefix","restriction":"String | ::Nil"},{"name":"upload_options","default_value":"Hash(String, String).new","external_name":"upload_options","restriction":"Hash(String, String)"},{"name":"public","default_value":"false","external_name":"public","restriction":"Bool"}],"args_string":"(bucket : String, client : Awscr::S3::Client?, prefix : String? = nil, upload_options : Hash(String, String) = Hash(String, String).new, public : Bool = false)","args_html":"(bucket : String, client : Awscr::S3::Client?, prefix : String? = <span class=\"n\">nil</span>, upload_options : Hash(String, String) = <span class=\"t\">Hash</span>(<span class=\"t\">String</span>, <span class=\"t\">String</span>).<span class=\"k\">new</span>, public : Bool = <span class=\"n\">false</span>)","location":{"filename":"src/shrine/storage/s3.cr","line_number":33,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/s3.cr#L33"},"def":{"name":"new","args":[{"name":"bucket","external_name":"bucket","restriction":"String"},{"name":"client","external_name":"client","restriction":"Awscr::S3::Client | ::Nil"},{"name":"prefix","default_value":"nil","external_name":"prefix","restriction":"String | ::Nil"},{"name":"upload_options","default_value":"Hash(String, String).new","external_name":"upload_options","restriction":"Hash(String, String)"},{"name":"public","default_value":"false","external_name":"public","restriction":"Bool"}],"visibility":"Public","body":"_ = allocate\n_.initialize(bucket, client, prefix, upload_options, public)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"bucket:String-instance-method","name":"bucket","abstract":false,"location":{"filename":"src/shrine/storage/s3.cr","line_number":9,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/s3.cr#L9"},"def":{"name":"bucket","return_type":"String","visibility":"Public","body":"@bucket"}},{"html_id":"clean(path)-instance-method","name":"clean","abstract":false,"args":[{"name":"path","external_name":"path","restriction":""}],"args_string":"(path)","args_html":"(path)","location":{"filename":"src/shrine/storage/s3.cr","line_number":103,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/s3.cr#L103"},"def":{"name":"clean","args":[{"name":"path","external_name":"path","restriction":""}],"visibility":"Public","body":""}},{"html_id":"client:Awscr::S3::Client-instance-method","name":"client","abstract":false,"location":{"filename":"src/shrine/storage/s3.cr","line_number":10,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/s3.cr#L10"},"def":{"name":"client","return_type":"Awscr::S3::Client","visibility":"Public","body":"@client"}},{"html_id":"delete(id:String):Bool-instance-method","name":"delete","doc":"Delets the file, and by default deletes the containing directory if\nit's empty.","summary":"<p>Delets the file, and by default deletes the containing directory if it's empty.</p>","abstract":false,"args":[{"name":"id","external_name":"id","restriction":"String"}],"args_string":"(id : String) : Bool","args_html":"(id : String) : Bool","location":{"filename":"src/shrine/storage/s3.cr","line_number":99,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/s3.cr#L99"},"def":{"name":"delete","args":[{"name":"id","external_name":"id","restriction":"String"}],"return_type":"Bool","visibility":"Public","body":"client.delete_object(bucket, object_key(id))"}},{"html_id":"exists?(id:String):Bool-instance-method","name":"exists?","doc":"Returns true if the file exists on the S3.","summary":"<p>Returns true if the file exists on the S3.</p>","abstract":false,"args":[{"name":"id","external_name":"id","restriction":"String"}],"args_string":"(id : String) : Bool","args_html":"(id : String) : Bool","location":{"filename":"src/shrine/storage/s3.cr","line_number":90,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/s3.cr#L90"},"def":{"name":"exists?","args":[{"name":"id","external_name":"id","restriction":"String"}],"return_type":"Bool","visibility":"Public","body":"begin\n  client.head_object(bucket, object: object_key(id))\n  true\nrescue Awscr::S3::Exception\n  false\nend"}},{"html_id":"object_key(id:String):String-instance-method","name":"object_key","doc":"Returns object key with potential prefix.","summary":"<p>Returns object key with potential prefix.</p>","abstract":false,"args":[{"name":"id","external_name":"id","restriction":"String"}],"args_string":"(id : String) : String","args_html":"(id : String) : String","location":{"filename":"src/shrine/storage/s3.cr","line_number":111,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/s3.cr#L111"},"def":{"name":"object_key","args":[{"name":"id","external_name":"id","restriction":"String"}],"return_type":"String","visibility":"Public","body":"@prefix ? [@prefix, id].join(\"/\") : id"}},{"html_id":"open(id:String,**options):IO-instance-method","name":"open","doc":"Returns a IO object from S3","summary":"<p>Returns a IO object from S3</p>","abstract":false,"args":[{"name":"id","external_name":"id","restriction":"String"}],"args_string":"(id : String, **options) : IO","args_html":"(id : String, **options) : IO","location":{"filename":"src/shrine/storage/s3.cr","line_number":65,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/s3.cr#L65"},"def":{"name":"open","args":[{"name":"id","external_name":"id","restriction":"String"}],"double_splat":{"name":"options","external_name":"options","restriction":""},"return_type":"IO","visibility":"Public","body":"io = IO::Memory.new\nclient.get_object(bucket, object_key(id)) do |obj|\n  io << obj\nend\n"}},{"html_id":"path(id:String)-instance-method","name":"path","abstract":false,"args":[{"name":"id","external_name":"id","restriction":"String"}],"args_string":"(id : String)","args_html":"(id : String)","location":{"filename":"src/shrine/storage/s3.cr","line_number":106,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/s3.cr#L106"},"def":{"name":"path","args":[{"name":"id","external_name":"id","restriction":"String"}],"visibility":"Public","body":"object_key(id)"}},{"html_id":"public?:Bool-instance-method","name":"public?","abstract":false,"location":{"filename":"src/shrine/storage/s3.cr","line_number":11,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/s3.cr#L11"},"def":{"name":"public?","return_type":"Bool","visibility":"Public","body":"@public"}},{"html_id":"upload(io:IO|UploadedFile,id:String,metadata:Shrine::UploadedFile::MetadataType,move=false,**upload_options)-instance-method","name":"upload","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO | UploadedFile"},{"name":"id","external_name":"id","restriction":"String"},{"name":"metadata","external_name":"metadata","restriction":"Shrine::UploadedFile::MetadataType"},{"name":"move","default_value":"false","external_name":"move","restriction":""}],"args_string":"(io : IO | UploadedFile, id : String, metadata : Shrine::UploadedFile::MetadataType, move = false, **upload_options)","args_html":"(io : IO | <a href=\"../../Shrine/UploadedFile.html\">UploadedFile</a>, id : String, metadata : <a href=\"../../Shrine/UploadedFile/MetadataType.html\">Shrine::UploadedFile::MetadataType</a>, move = <span class=\"n\">false</span>, **upload_options)","location":{"filename":"src/shrine/storage/s3.cr","line_number":60,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/s3.cr#L60"},"def":{"name":"upload","args":[{"name":"io","external_name":"io","restriction":"IO | UploadedFile"},{"name":"id","external_name":"id","restriction":"String"},{"name":"metadata","external_name":"metadata","restriction":"Shrine::UploadedFile::MetadataType"},{"name":"move","default_value":"false","external_name":"move","restriction":""}],"double_splat":{"name":"upload_options","external_name":"upload_options","restriction":""},"visibility":"Public","body":"upload(io, id, move, **(upload_options.merge(metadata: metadata)))"}},{"html_id":"upload(io:IO|UploadedFile,id:String,move=false,**upload_options)-instance-method","name":"upload","doc":"Copies the file into the given location.\n","summary":"<p>Copies the file into the given location.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO | UploadedFile"},{"name":"id","external_name":"id","restriction":"String"},{"name":"move","default_value":"false","external_name":"move","restriction":""}],"args_string":"(io : IO | UploadedFile, id : String, move = false, **upload_options)","args_html":"(io : IO | <a href=\"../../Shrine/UploadedFile.html\">UploadedFile</a>, id : String, move = <span class=\"n\">false</span>, **upload_options)","location":{"filename":"src/shrine/storage/s3.cr","line_number":44,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/s3.cr#L44"},"def":{"name":"upload","args":[{"name":"io","external_name":"io","restriction":"IO | UploadedFile"},{"name":"id","external_name":"id","restriction":"String"},{"name":"move","default_value":"false","external_name":"move","restriction":""}],"double_splat":{"name":"upload_options","external_name":"upload_options","restriction":""},"visibility":"Public","body":"options = Hash(String, String).new\nif (metadata = upload_options[:metadata]?) && metadata.is_a?(Shrine::UploadedFile::MetadataType)\n  if metadata[\"filename\"]\n    options[\"Content-Disposition\"] = ContentDisposition.inline(metadata[\"filename\"].to_s)\n  end\nend\nif public?\n  options[\"x-amz-acl\"] = \"public-read\"\nend\noptions.merge!(@upload_options)\nupload_options.each do |key, value|\n  options[key.to_s] = value.to_s\nend\nif io.is_a?(UploadedFile)\n  io = io.io\nend\nclient.put_object(bucket, object_key(id), io.gets_to_end, options)\ntrue\n"}},{"html_id":"url(id:String,**options):String-instance-method","name":"url","doc":"Returns the presigned URL to the file.","summary":"<p>Returns the presigned URL to the file.</p>","abstract":false,"args":[{"name":"id","external_name":"id","restriction":"String"}],"args_string":"(id : String, **options) : String","args_html":"(id : String, **options) : String","location":{"filename":"src/shrine/storage/s3.cr","line_number":76,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/storage/s3.cr#L76"},"def":{"name":"url","args":[{"name":"id","external_name":"id","restriction":"String"}],"double_splat":{"name":"options","external_name":"options","restriction":""},"return_type":"String","visibility":"Public","body":"presigned_options = Awscr::S3::Presigned::Url::Options.new(aws_access_key: client.@aws_access_key, aws_secret_key: client.@aws_secret_key, region: client.@region, object: \"/#{object_key(id)}\", bucket: bucket)\nurl = Awscr::S3::Presigned::Url.new(presigned_options)\nurl.for(:get)\n"}}]}]},{"html_id":"shrine/Shrine/UploadedFile","path":"Shrine/UploadedFile.html","kind":"class","full_name":"Shrine::UploadedFile","name":"UploadedFile","abstract":false,"superclass":{"html_id":"shrine/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"shrine/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"shrine/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"shrine/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/shrine/uploaded_file.cr","line_number":4,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/uploaded_file.cr#L4"}],"repository_name":"shrine","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"shrine/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"}],"namespace":{"html_id":"shrine/Shrine","kind":"class","full_name":"Shrine","name":"Shrine"},"class_methods":[{"html_id":"from_json(json:String)-class-method","name":"from_json","abstract":false,"args":[{"name":"json","external_name":"json","restriction":"String"}],"args_string":"(json : String)","args_html":"(json : String)","location":{"filename":"src/shrine/uploaded_file.cr","line_number":29,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/uploaded_file.cr#L29"},"def":{"name":"from_json","args":[{"name":"json","external_name":"json","restriction":"String"}],"visibility":"Public","body":"new(Mapper.from_json(json))"}}],"constructors":[{"html_id":"new(id:String,storage_key:String,metadata:MetadataType=MetadataType.new)-class-method","name":"new","abstract":false,"args":[{"name":"id","external_name":"id","restriction":"String"},{"name":"storage_key","external_name":"storage_key","restriction":"String"},{"name":"metadata","default_value":"MetadataType.new","external_name":"metadata","restriction":"MetadataType"}],"args_string":"(id : String, storage_key : String, metadata : MetadataType = MetadataType.new)","args_html":"(id : String, storage_key : String, metadata : <a href=\"../Shrine/UploadedFile/MetadataType.html\">MetadataType</a> = <span class=\"t\">MetadataType</span>.<span class=\"k\">new</span>)","location":{"filename":"src/shrine/uploaded_file.cr","line_number":36,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/uploaded_file.cr#L36"},"def":{"name":"new","args":[{"name":"id","external_name":"id","restriction":"String"},{"name":"storage_key","external_name":"storage_key","restriction":"String"},{"name":"metadata","default_value":"MetadataType.new","external_name":"metadata","restriction":"MetadataType"}],"visibility":"Public","body":"_ = allocate\n_.initialize(id, storage_key, metadata)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/shrine/uploaded_file.cr","line_number":5,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/uploaded_file.cr#L5"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}},{"html_id":"new(mapper:Mapper)-class-method","name":"new","abstract":false,"args":[{"name":"mapper","external_name":"mapper","restriction":"Mapper"}],"args_string":"(mapper : Mapper)","args_html":"(mapper : <a href=\"../Shrine/UploadedFile/Mapper.html\">Mapper</a>)","location":{"filename":"src/shrine/uploaded_file.cr","line_number":33,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/uploaded_file.cr#L33"},"def":{"name":"new","args":[{"name":"mapper","external_name":"mapper","restriction":"Mapper"}],"visibility":"Public","body":"_ = allocate\n_.initialize(mapper)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"==(other:UploadedFile)-instance-method","name":"==","doc":"Returns true if the other UploadedFile is uploaded to the same\nstorage and it has the same #id.","summary":"<p>Returns true if the other UploadedFile is uploaded to the same storage and it has the same #id.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"UploadedFile"}],"args_string":"(other : UploadedFile)","args_html":"(other : <a href=\"../Shrine/UploadedFile.html\">UploadedFile</a>)","location":{"filename":"src/shrine/uploaded_file.cr","line_number":215,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/uploaded_file.cr#L215"},"def":{"name":"==","args":[{"name":"other","external_name":"other","restriction":"UploadedFile"}],"visibility":"Public","body":"((self.class == other.class) && (self.id == other.id)) && (self.storage_key == other.storage_key)"}},{"html_id":"[](key)-instance-method","name":"[]","doc":"Shorthand for accessing metadata values.","summary":"<p>Shorthand for accessing metadata values.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","location":{"filename":"src/shrine/uploaded_file.cr","line_number":70,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/uploaded_file.cr#L70"},"def":{"name":"[]","args":[{"name":"key","external_name":"key","restriction":""}],"visibility":"Public","body":"metadata[key]?"}},{"html_id":"close-instance-method","name":"close","doc":"Part of complying to the IO interface. It delegates to the internally\nopened IO object.","summary":"<p>Part of complying to the IO interface.</p>","abstract":false,"location":{"filename":"src/shrine/uploaded_file.cr","line_number":163,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/uploaded_file.cr#L163"},"def":{"name":"close","visibility":"Public","body":"if opened?\n  io.close\nend"}},{"html_id":"content_type-instance-method","name":"content_type","abstract":false,"location":{"filename":"src/shrine/uploaded_file.cr","line_number":61,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/uploaded_file.cr#L61"},"def":{"name":"content_type","visibility":"Public","body":"mime_type"}},{"html_id":"data:Hash(String,String|MetadataType)-instance-method","name":"data","doc":"Returns serializable hash representation of the uploaded file.","summary":"<p>Returns serializable hash representation of the uploaded file.</p>","abstract":false,"location":{"filename":"src/shrine/uploaded_file.cr","line_number":209,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/uploaded_file.cr#L209"},"def":{"name":"data","return_type":"Hash(String, String | MetadataType)","visibility":"Public","body":"{\"id\" => id, \"storage_key\" => storage_key, \"metadata\" => metadata}"}},{"html_id":"delete-instance-method","name":"delete","doc":"Calls `#delete` on the storage, which deletes the file from the\nstorage.","summary":"<p>Calls <code><a href=\"../Shrine/UploadedFile.html#delete-instance-method\">#delete</a></code> on the storage, which deletes the file from the storage.</p>","abstract":false,"location":{"filename":"src/shrine/uploaded_file.cr","line_number":190,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/uploaded_file.cr#L190"},"def":{"name":"delete","visibility":"Public","body":"storage.delete(id)"}},{"html_id":"download(**options)-instance-method","name":"download","doc":"Streams content into a newly created tempfile and returns it.\n\n```\nuploaded_file.download\n# => #<File:/var/folders/.../20180302-33119-1h1vjbq.jpg>\n```\n","summary":"<p>Streams content into a newly created tempfile and returns it.</p>","abstract":false,"location":{"filename":"src/shrine/uploaded_file.cr","line_number":117,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/uploaded_file.cr#L117"},"def":{"name":"download","double_splat":{"name":"options","external_name":"options","restriction":""},"visibility":"Public","body":"tempfile = File.tempfile(\"shrine\", \".#{extension}\")\nstream(tempfile, **options)\ntempfile.rewind\n"}},{"html_id":"download(**options,&)-instance-method","name":"download","doc":"Streams content into a newly created tempfile, yields it to the\nblock, and at the end of the block automatically closes it.\nIn this case the return value of the method is the block\nreturn value.\n\n```\nuploaded_file.download { |tempfile| tempfile.gets_to_end } # tempfile is deleted\n```\n","summary":"<p>Streams content into a newly created tempfile, yields it to the block, and at the end of the block automatically closes it.</p>","abstract":false,"location":{"filename":"src/shrine/uploaded_file.cr","line_number":132,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/uploaded_file.cr#L132"},"def":{"name":"download","double_splat":{"name":"options","external_name":"options","restriction":""},"yields":1,"visibility":"Public","body":"begin\n  tempfile = download(**options)\n  yield(tempfile)\nensure\n  if tempfile\n    tempfile.not_nil!.close\n    tempfile.not_nil!.delete\n  end\nend"}},{"html_id":"exists?-instance-method","name":"exists?","doc":"Calls `#exists?` on the storage, which checks whether the file exists\non the storage.","summary":"<p>Calls <code><a href=\"../Shrine/UploadedFile.html#exists%3F-instance-method\">#exists?</a></code> on the storage, which checks whether the file exists on the storage.</p>","abstract":false,"location":{"filename":"src/shrine/uploaded_file.cr","line_number":179,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/uploaded_file.cr#L179"},"def":{"name":"exists?","visibility":"Public","body":"storage.exists?(id)"}},{"html_id":"extension-instance-method","name":"extension","abstract":false,"location":{"filename":"src/shrine/uploaded_file.cr","line_number":43,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/uploaded_file.cr#L43"},"def":{"name":"extension","visibility":"Public","body":"result = (File.extname(id))[1..-1]?\nif original_filename\n  result || (result = (File.extname(original_filename.not_nil!))[1..-1]?)\nend\nif result\n  result = result.downcase\nend\nresult\n"}},{"html_id":"gets_to_end(*args,**options)-instance-method","name":"gets_to_end","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/shrine/uploaded_file.cr","line_number":41,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/uploaded_file.cr#L41"},"def":{"name":"gets_to_end","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"io.gets_to_end(*args, **options)"}},{"html_id":"gets_to_end(*args,**options,&)-instance-method","name":"gets_to_end","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/shrine/uploaded_file.cr","line_number":41,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/uploaded_file.cr#L41"},"def":{"name":"gets_to_end","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"visibility":"Public","body":"io.gets_to_end(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"id(*args,**options)-instance-method","name":"id","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","def":{"name":"id","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@mapper.id(*args, **options)"}},{"html_id":"id(*args,**options,&)-instance-method","name":"id","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","def":{"name":"id","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"visibility":"Public","body":"@mapper.id(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"io:IO-instance-method","name":"io","abstract":false,"location":{"filename":"src/shrine/uploaded_file.cr","line_number":204,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/uploaded_file.cr#L204"},"def":{"name":"io","return_type":"IO","visibility":"Public","body":"(@io || (@io = _open)).not_nil!"}},{"html_id":"metadata(*args,**options)-instance-method","name":"metadata","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","def":{"name":"metadata","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@mapper.metadata(*args, **options)"}},{"html_id":"metadata(*args,**options,&)-instance-method","name":"metadata","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","def":{"name":"metadata","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"visibility":"Public","body":"@mapper.metadata(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"mime_type-instance-method","name":"mime_type","abstract":false,"location":{"filename":"src/shrine/uploaded_file.cr","line_number":57,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/uploaded_file.cr#L57"},"def":{"name":"mime_type","visibility":"Public","body":"metadata[\"mime_type\"]?.try(&.to_s)"}},{"html_id":"open(**options)-instance-method","name":"open","doc":"Calls `#open` on the storage to open the uploaded file for reading.\nMost storages will return a lazy IO object which dynamically\nretrieves file content from the storage as the object is being read.\n\nIf a block is given, the opened IO object is yielded to the block,\nand at the end of the block it's automatically closed. In this case\nthe return value of the method is the block return value.\n\nIf no block is given, the opened IO object is returned.\n\n```\nuploaded_file.open # => IO object returned by the storage\nuploaded_file.read # => \"...\"\nuploaded_file.close\n\n# or\n\nuploaded_file.open { |io| io.read } # the IO is automatically closed\n```\n","summary":"<p>Calls <code><a href=\"../Shrine/UploadedFile.html#open%28%2A%2Aoptions%29-instance-method\">#open</a></code> on the storage to open the uploaded file for reading.</p>","abstract":false,"location":{"filename":"src/shrine/uploaded_file.cr","line_number":94,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/uploaded_file.cr#L94"},"def":{"name":"open","double_splat":{"name":"options","external_name":"options","restriction":""},"visibility":"Public","body":"if @io\n  @io.not_nil!.close\nend\n@io = _open(**options)\n"}},{"html_id":"open(**options,&)-instance-method","name":"open","abstract":false,"location":{"filename":"src/shrine/uploaded_file.cr","line_number":99,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/uploaded_file.cr#L99"},"def":{"name":"open","double_splat":{"name":"options","external_name":"options","restriction":""},"yields":1,"visibility":"Public","body":"open(**options)\nbegin\n  yield @io.not_nil!\nensure\n  close\n  @io = nil\nend\n"}},{"html_id":"opened?-instance-method","name":"opened?","doc":"Returns whether the file has already been opened.","summary":"<p>Returns whether the file has already been opened.</p>","abstract":false,"location":{"filename":"src/shrine/uploaded_file.cr","line_number":168,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/uploaded_file.cr#L168"},"def":{"name":"opened?","visibility":"Public","body":"!(!@io)"}},{"html_id":"original_filename-instance-method","name":"original_filename","abstract":false,"location":{"filename":"src/shrine/uploaded_file.cr","line_number":65,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/uploaded_file.cr#L65"},"def":{"name":"original_filename","visibility":"Public","body":"metadata[\"filename\"]?.try(&.to_s)"}},{"html_id":"pos(*args,**options)-instance-method","name":"pos","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/shrine/uploaded_file.cr","line_number":40,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/uploaded_file.cr#L40"},"def":{"name":"pos","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"io.pos(*args, **options)"}},{"html_id":"pos(*args,**options,&)-instance-method","name":"pos","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/shrine/uploaded_file.cr","line_number":40,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/uploaded_file.cr#L40"},"def":{"name":"pos","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"visibility":"Public","body":"io.pos(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"replace(io,**options)-instance-method","name":"replace","doc":"Uploads a new file to this file's location and returns it.","summary":"<p>Uploads a new file to this file's location and returns it.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":""}],"args_string":"(io, **options)","args_html":"(io, **options)","location":{"filename":"src/shrine/uploaded_file.cr","line_number":184,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/uploaded_file.cr#L184"},"def":{"name":"replace","args":[{"name":"io","external_name":"io","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"visibility":"Public","body":"uploader.upload(io, **options, location: id)"}},{"html_id":"size-instance-method","name":"size","abstract":false,"location":{"filename":"src/shrine/uploaded_file.cr","line_number":51,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/uploaded_file.cr#L51"},"def":{"name":"size","visibility":"Public","body":"begin\n  metadata[\"size\"]?.try(&.to_i)\nrescue ArgumentError\n  nil\nend"}},{"html_id":"storage:Shrine::Storage::Base-instance-method","name":"storage","doc":"Returns the storage that this file was uploaded to.","summary":"<p>Returns the storage that this file was uploaded to.</p>","abstract":false,"location":{"filename":"src/shrine/uploaded_file.cr","line_number":200,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/uploaded_file.cr#L200"},"def":{"name":"storage","return_type":"Shrine::Storage::Base","visibility":"Public","body":"(Shrine.find_storage(storage_key.not_nil!)).not_nil!"}},{"html_id":"storage_key(*args,**options)-instance-method","name":"storage_key","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","def":{"name":"storage_key","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@mapper.storage_key(*args, **options)"}},{"html_id":"storage_key(*args,**options,&)-instance-method","name":"storage_key","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","def":{"name":"storage_key","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"visibility":"Public","body":"@mapper.storage_key(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"stream(destination:IO,**options)-instance-method","name":"stream","doc":"Streams uploaded file content into the specified destination. The\ndestination object is given directly to `IO.copy`.\n\nIf the uploaded file is already opened, it will be simply rewinded\nafter streaming finishes. Otherwise the uploaded file is opened and\nthen closed after streaming.\n\n```\nuploaded_file.stream(IO::Memory.new)\n```","summary":"<p>Streams uploaded file content into the specified destination.</p>","abstract":false,"args":[{"name":"destination","external_name":"destination","restriction":"IO"}],"args_string":"(destination : IO, **options)","args_html":"(destination : IO, **options)","location":{"filename":"src/shrine/uploaded_file.cr","line_number":152,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/uploaded_file.cr#L152"},"def":{"name":"stream","args":[{"name":"destination","external_name":"destination","restriction":"IO"}],"double_splat":{"name":"options","external_name":"options","restriction":""},"visibility":"Public","body":"if opened?\n  IO.copy(io, destination)\n  io.rewind\nelse\n  open(**options) do |io|\n    IO.copy(io, destination)\n  end\nend"}},{"html_id":"to_json(*args,**options)-instance-method","name":"to_json","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","def":{"name":"to_json","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@mapper.to_json(*args, **options)"}},{"html_id":"to_json(*args,**options,&)-instance-method","name":"to_json","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","def":{"name":"to_json","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"visibility":"Public","body":"@mapper.to_json(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"uploader-instance-method","name":"uploader","doc":"Returns an uploader object for the corresponding storage.","summary":"<p>Returns an uploader object for the corresponding storage.</p>","abstract":false,"location":{"filename":"src/shrine/uploaded_file.cr","line_number":195,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/uploaded_file.cr#L195"},"def":{"name":"uploader","visibility":"Public","body":"Shrine.new(storage_key)"}},{"html_id":"url(**options):String-instance-method","name":"url","doc":"Calls `#url` on the storage, forwarding any given URL options.","summary":"<p>Calls <code><a href=\"../Shrine/UploadedFile.html#url%28%2A%2Aoptions%29%3AString-instance-method\">#url</a></code> on the storage, forwarding any given URL options.</p>","abstract":false,"location":{"filename":"src/shrine/uploaded_file.cr","line_number":173,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/uploaded_file.cr#L173"},"def":{"name":"url","double_splat":{"name":"options","external_name":"options","restriction":""},"return_type":"String","visibility":"Public","body":"storage.url(id, **options)"}}],"types":[{"html_id":"shrine/Shrine/UploadedFile/Mapper","path":"Shrine/UploadedFile/Mapper.html","kind":"struct","full_name":"Shrine::UploadedFile::Mapper","name":"Mapper","abstract":false,"superclass":{"html_id":"shrine/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"shrine/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"shrine/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"shrine/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"shrine/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/shrine/uploaded_file.cr","line_number":9,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/uploaded_file.cr#L9"}],"repository_name":"shrine","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"shrine/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"}],"namespace":{"html_id":"shrine/Shrine/UploadedFile","kind":"class","full_name":"Shrine::UploadedFile","name":"UploadedFile"},"constructors":[{"html_id":"new(id,storage_key,metadata)-class-method","name":"new","abstract":false,"args":[{"name":"id","external_name":"id","restriction":""},{"name":"storage_key","external_name":"storage_key","restriction":""},{"name":"metadata","external_name":"metadata","restriction":""}],"args_string":"(id, storage_key, metadata)","args_html":"(id, storage_key, metadata)","location":{"filename":"src/shrine/uploaded_file.cr","line_number":16,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/uploaded_file.cr#L16"},"def":{"name":"new","args":[{"name":"id","external_name":"id","restriction":""},{"name":"storage_key","external_name":"storage_key","restriction":""},{"name":"metadata","external_name":"metadata","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(id, storage_key, metadata)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/shrine/uploaded_file.cr","line_number":10,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/uploaded_file.cr#L10"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}}],"instance_methods":[{"html_id":"id:String-instance-method","name":"id","abstract":false,"location":{"filename":"src/shrine/uploaded_file.cr","line_number":12,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/uploaded_file.cr#L12"},"def":{"name":"id","return_type":"String","visibility":"Public","body":"@id"}},{"html_id":"metadata:MetadataType-instance-method","name":"metadata","abstract":false,"location":{"filename":"src/shrine/uploaded_file.cr","line_number":14,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/uploaded_file.cr#L14"},"def":{"name":"metadata","return_type":"MetadataType","visibility":"Public","body":"@metadata"}},{"html_id":"storage_key:String-instance-method","name":"storage_key","abstract":false,"location":{"filename":"src/shrine/uploaded_file.cr","line_number":13,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/uploaded_file.cr#L13"},"def":{"name":"storage_key","return_type":"String","visibility":"Public","body":"@storage_key"}}]},{"html_id":"shrine/Shrine/UploadedFile/MetadataType","path":"Shrine/UploadedFile/MetadataType.html","kind":"alias","full_name":"Shrine::UploadedFile::MetadataType","name":"MetadataType","abstract":false,"locations":[{"filename":"src/shrine/uploaded_file.cr","line_number":7,"url":"https://github.com/jetrockets/shrine.cr/blob/df6b61be29ca3218cd687eb568647b9b535011a1/src/shrine/uploaded_file.cr#L7"}],"repository_name":"shrine","program":false,"enum":false,"alias":true,"aliased":"Hash(String, Int16 | Int32 | Int64 | String | UInt16 | UInt32 | UInt64 | Nil)","aliased_html":"Hash(String, Int16 | Int32 | Int64 | String | UInt16 | UInt32 | UInt64 | Nil)","const":false,"namespace":{"html_id":"shrine/Shrine/UploadedFile","kind":"class","full_name":"Shrine::UploadedFile","name":"UploadedFile"}}]}]}]}})